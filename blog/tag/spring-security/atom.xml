<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Spring Security | Programming Design Notes]]></title>
  <link href="http://pro.ctlok.com/blog/tag/spring-security/atom.xml" rel="self"/>
  <link href="http://pro.ctlok.com/"/>
  <updated>2012-03-26T14:29:28+08:00</updated>
  <id>http://pro.ctlok.com/</id>
  <author>
    <name><![CDATA[Lawrence Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用 Spring Security 3 來保護頁面]]></title>
    <link href="http://pro.ctlok.com/2010/02/spring-security-3.html"/>
    <updated>2010-02-23T18:05:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/02/spring-security-3</id>
    <content type="html"><![CDATA[<p>Spring Security 官方文檔內只有很簡單的教學，教學內將所有 username 和 password 放到 xml 文件內，在真實的環境很少會這樣做，大多數也會經由資料庫去存取用戶資料，在這裡我做一個簡單的範例，雖然這範例沒有使用到資料庫，而只是簡單的制作一個用戶認証的 class，但憑這個 class 你可以經由資料庫或其他方式去存取用戶資料。<br /><br />首先我們要制作 3 個 JSP 檔案<br /><br /><ol><li>index.jsp (主頁面)</li><li>login.jsp (login 表格頁面)</li><li>secure/protected.jsp (受保護的 JSP 頁面)</li></ol><br />index.jsp<br /><pre class="brush: html">&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot; %&gt;<br /> &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;<br />&lt;html&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;<br />        &lt;title&gt;Index Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;a href=&quot;secure/protected.jsp&quot;&gt;Click here to view secure page&lt;/a&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />login.jsp<br /><pre class="brush: html">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br />pageEncoding=&quot;UTF-8&quot; %&gt;<br />&lt;%@taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;<br /> &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;<br />        &lt;title&gt;Login Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;c:if test=&quot;${param.error != null}&quot;&gt;<br />            &lt;h2&gt;Username or password wrong!&lt;/h2&gt;<br />        &lt;/c:if&gt;<br />        &lt;form method=&quot;post&quot; action=&quot;j_spring_security_check&quot;&gt;<br />            &lt;label&gt;<br />                username:<br />            &lt;/label&gt;<br />            &lt;input type=&quot;text&quot; name=&quot;j_username&quot;/&gt;<br />            &lt;br/&gt;<br />            &lt;label&gt;<br />                password:<br />            &lt;/label&gt;<br />            &lt;input type=&quot;password&quot; name=&quot;j_password&quot;/&gt;<br />            &lt;br/&gt;<br />            &lt;input type=&quot;checkbox&quot; name=&quot;_spring_security_remember_me&quot;/&gt;remember me<br />            &lt;br/&gt;<br />            &lt;input type=&quot;submit&quot;/&gt;<br />        &lt;/form&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />secure/protected.jsp<br /><pre class="brush: html">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br />pageEncoding=&quot;UTF-8&quot; %&gt;<br /> &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;<br />        &lt;title&gt;Protected Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;h1&gt;Hello World! This is secure page!&lt;/h1&gt;<br />        &lt;a href=&quot;../j_spring_security_logout&quot;&gt;Logout&lt;/a&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />現在設定 web.xml<br />在 web.xml 加入 Spring 的 ApplicationContext 檔案位置<br /><pre class="brush: xml">&lt;context-param&gt;<br />    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br />    &lt;param-value&gt;<br />        /WEB-INF/security-config.xml<br />    &lt;/param-value&gt;<br />&lt;/context-param&gt;<br /></pre><br />再加入 Spring ApplicationContext Listerner<br /><pre class="brush: xml">&lt;listener&gt;<br />    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;<br />&lt;/listener&gt;<br /></pre><br />再加入 Spring Security 的 Filter<br /><pre class="brush: xml">&lt;filter&gt;<br />    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;<br />&lt;/filter&gt;<br />&lt;filter-mapping&gt;<br />    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />    &lt;url-pattern&gt;/<em>&lt;/url-pattern&gt;<br />&lt;/filter-mapping&gt;<br /></pre><br />完整 web.xml<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"<br /> xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"<br /> id="WebApp_ID" version="2.5"&gt;<br />    &lt;display-name&gt;SpringSecurity&lt;/display-name&gt;<br />    &lt;welcome-file-list&gt;<br />        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;<br />    &lt;/welcome-file-list&gt;<br />    &lt;context-param&gt;<br />        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br />        &lt;param-value&gt;<br />            /WEB-INF/security-config.xml<br />        &lt;/param-value&gt;<br />    &lt;/context-param&gt;<br />    <br />    &lt;listener&gt;<br />        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;<br />    &lt;/listener&gt;<br />    <br />    &lt;filter&gt;<br />        &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;<br />    &lt;/filter&gt;<br />    &lt;filter-mapping&gt;<br />        &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />        &lt;url-pattern&gt;/</em>&lt;/url-pattern&gt;<br />    &lt;/filter-mapping&gt;<br />&lt;/web-app&gt;<br /></pre><br />現在制作 Spring Security 的設定檔<br />/WEB-INF/security-config.xml<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;beans:beans xmlns="http://www.springframework.org/schema/security"<br /> xmlns:beans="http://www.springframework.org/schema/beans"<br /> xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<br /> http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"&gt;<br />    &lt;http use-expressions="true" auto-config="true"&gt;<br />        &lt;intercept-url pattern="/secure/protected.jsp" access="hasRole('ROLE_USER')"/&gt;<br />        &lt;intercept-url pattern="/login.jsp" access="isAnonymous()"/&gt;<br />        &lt;intercept-url pattern="/<strong>" access="permitAll"/&gt;<br />        &lt;form-login login-processing-url="/j_spring_security_check"<br />         login-page="/login.jsp" default-target-url="/index.jsp"<br />         authentication-failure-url="/login.jsp?error=1"/&gt;<br />        &lt;logout logout-url="/j_spring_security_logout"/&gt;<br />    &lt;/http&gt;<br />&lt;/beans:beans&gt;<br /></pre><br />下面的描述是:<br /><br /><ol><li>將 /secure/protected.jsp 設為 ROLE_USER 才可以進入。</li><li>未 login 的用戶才可以進入</li><li>其他頁面一律可以進入</li></ol><br /><pre class="brush: xml">&lt;intercept-url pattern="/secure/protected.jsp" access="hasRole('ROLE_USER')"/&gt;<br />&lt;intercept-url pattern="/login.jsp" access="isAnonymous()"/&gt;<br />&lt;intercept-url pattern="/</strong>" access="permitAll"/&gt;<br /></pre><br />現在 Create 一個 User Class 並實作 UserDetails Interface。<br />com.blogspot.lawpronotes.security.User<br /><pre class="brush: java">package com.blogspot.lawpronotes.security;<br /><br />import java.util.ArrayList;<br />import java.util.Collection;<br />import java.util.List;<br /><br />import org.springframework.security.core.GrantedAuthority;<br />import org.springframework.security.core.authority.GrantedAuthorityImpl;<br />import org.springframework.security.core.userdetails.UserDetails;<br /><br />public class User implements UserDetails {<br /><br />    private static final long serialVersionUID = 1L;<br /><br />    private String name;<br />    private String password;<br /><br />    public User(String name, String password) {<br />        this.name = name;<br />        this.password = password;<br />    }<br /><br />    @Override<br />    public Collection&lt;GrantedAuthority&gt; getAuthorities() {<br />        // TODO Auto-generated method stub<br />        List&lt;GrantedAuthority&gt; grantedAuthorities = new ArrayList&lt;GrantedAuthority&gt;();<br />        grantedAuthorities.add(new GrantedAuthorityImpl(&quot;ROLE_USER&quot;));<br />        return grantedAuthorities;<br />    }<br /><br />    @Override<br />    public String getPassword() {<br />        // TODO Auto-generated method stub<br />        return password;<br />    }<br /><br />    @Override<br />    public String getUsername() {<br />        // TODO Auto-generated method stub<br />        return name;<br />    }<br /><br />    @Override<br />    public boolean isAccountNonExpired() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />    @Override<br />    public boolean isAccountNonLocked() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />    @Override<br />    public boolean isCredentialsNonExpired() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />    @Override<br />    public boolean isEnabled() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />}<br /></pre><br />User 這個 Class 作用是給 Spring Security 儲存 User。<br /><br />現在制作一個 SecurityManager 的 Class 並實作 UserDetailsService Interface。<br />com.blogspot.lawpronotes.security.SecurityManager<br /><pre class="brush: java">package com.blogspot.lawpronotes.security;<br /><br />import java.util.ArrayList;<br /><br />import org.springframework.dao.DataAccessException;<br />import org.springframework.security.core.userdetails.UserDetails;<br />import org.springframework.security.core.userdetails.UserDetailsService;<br />import org.springframework.security.core.userdetails.UsernameNotFoundException;<br /><br />public class SecurityManager implements UserDetailsService {<br /><br />    @Override<br />    public UserDetails loadUserByUsername(String username)<br />            throws UsernameNotFoundException, DataAccessException {<br />        // TODO Auto-generated method stub<br />        ArrayList&lt;User&gt; userList = new ArrayList&lt;User&gt;();<br />        userList.add(new User("Lawrence", "123456"));<br />        userList.add(new User("Tom", "654321"));<br />        userList.add(new User("Terry", "321456"));<br />        for (int i = 0; i &lt; userList.size(); i++) {<br />            User user = (User) userList.get(i);<br />            if (user.getUsername().equals(username))<br />                return user;<br />        }<br />        throw new UsernameNotFoundException("User " + username<br />                + " has no GrantedAuthority");<br />    }<br />}<br /></pre><br />loadUserByUsername 是認証用戶的主要部份，成功配對到用戶名稱便返回一個 UserDetails 的對像，並交由 Spring Security 再去配對密碼是否正確，所以我們是看不到用戶密碼的。<br />這這個 method 內，我只是將用戶放到 List 中再配對起來，各位可以選擇用什麼方法去存取用戶資料。<br /><br />現在回到 Spring Security 的設定檔去加入 SecurityManager 這個自定的 Class。<br />加入以下 xml 到 security-config.xml 內。<br /><pre class="brush: xml">&lt;authentication-manager&gt;<br />        &lt;authentication-provider user-service-ref="securityManager"/&gt;<br />    &lt;/authentication-manager&gt;<br />    &lt;beans:bean id="securityManager" class="com.blogspot.lawpronotes.security.SecurityManager"/&gt;<br /></pre><br />完整 security-config.xml<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;beans:beans xmlns="http://www.springframework.org/schema/security"<br /> xmlns:beans="http://www.springframework.org/schema/beans"<br /> xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<br /> http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"&gt;<br />    &lt;http use-expressions="true" auto-config="true"&gt;<br />  &lt;intercept-url pattern="/secure/protected.jsp" access="hasRole('ROLE_USER')"/&gt;<br />  &lt;intercept-url pattern="/login.jsp" access="isAnonymous()"/&gt;<br />  &lt;intercept-url pattern="/**" access="permitAll"/&gt;<br />        &lt;form-login login-processing-url="/j_spring_security_check"<br />         login-page="/login.jsp" default-target-url="/index.jsp"<br />         authentication-failure-url="/login.jsp?error=1"/&gt;<br />        &lt;logout logout-url="/j_spring_security_logout"/&gt;<br />    &lt;/http&gt;<br />    &lt;authentication-manager&gt;<br />        &lt;authentication-provider user-service-ref="securityManager"/&gt;<br />    &lt;/authentication-manager&gt;<br />    &lt;beans:bean id="securityManager" class="com.blogspot.lawpronotes.security.SecurityManager"/&gt;<br />&lt;/beans:beans&gt;<br /></pre><br />現在可以試試效果，直接進入 /secure/protected.jsp 會彈到 login.jsp。<br />只有經過認証的用戶才可進入。<br /><br />範例下載:&nbsp;<a href="http://sites.google.com/site/lawrencespace/lawpronotes/download/SpringSecurity.war">SpringSecurity.war</a><a href="http://www.blogger.com/"></a><br /><br />相關書籍:&nbsp;<a href="http://www.amazon.com/Spring-Recipes-Problem-Solution-Gary-Mak/dp/1590599799?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Spring Recipes: A Problem-Solution Approach" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1590599799&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1590599799" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Spring-Action-Craig-Walls/dp/1933988134?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Spring in Action" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1933988134&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1933988134" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Professional-Java-Development-Spring-Framework/dp/0764574833?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Professional Java Development with the Spring Framework" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0764574833&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0764574833" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-8751328716629164500?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
</feed>
