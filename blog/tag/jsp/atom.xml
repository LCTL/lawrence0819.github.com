<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: JSP | Programming Design Notes]]></title>
  <link href="http://pro.ctlok.com/blog/tag/jsp/atom.xml" rel="self"/>
  <link href="http://pro.ctlok.com/"/>
  <updated>2012-04-02T14:13:25+08:00</updated>
  <id>http://pro.ctlok.com/</id>
  <author>
    <name><![CDATA[Lawrence Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Guice + Jersey 打造 RESTful 應用程式]]></title>
    <link href="http://pro.ctlok.com/2011/09/guice-jersey-restful-application.html"/>
    <updated>2011-09-08T14:46:00+08:00</updated>
    <id>http://pro.ctlok.com/2011/09/guice-jersey-restful-application</id>
    <content type="html"><![CDATA[<p>以前我喜歡使用 <b>Spring + Spring Web MVC</b> 來打造 <b>RESTful</b> 應用程式，但 <b>Spring</b> 的起動有點慢，如果放上 <b>Google App Engine</b> 上經常令用戶等待很久才載入到頁面。<br /><br />今次選用了 <b>Guice + Jersey</b> 的組合。<b>Guice</b> 是一個輕量級的容器，設定上比起 <b>Spring</b> 更簡單，起動或注入速度亦比 <b>Spring</b> 快。而 <b>Jersey</b> 則是一個為 <b>RESTful web service</b> 而設的一個 <b>Framework</b>。<br /><br /><b>Gucie</b> 官方網址: <a href="http://code.google.com/p/google-guice/">http://code.google.com/p/google-guice/</a><br /><b>Jersey</b> 官方網址: <a href="http://jersey.java.net/">http://jersey.java.net/</a><br /><br />因為手上的電腦沒有安裝 <b>Application Server</b>，只好拿 <b>GAE</b> 的 <b>Development Server</b> 來測試。<br /><br />首先下載 <b>Guice</b> : <a href="http://code.google.com/p/google-guice/downloads/detail?name=guice-3.0.zip&can=2&q=">http://code.google.com/p/google-guice/downloads/detail?name=guice-3.0.zip&amp;can=2&amp;q=</a> (現時為止最新版本為 3.0)<br /><br />打開後將 <b>aopalliance.jar, guice-3.0.jar, guice-servlet-3.0.jar</b> 和 <b>javax.inject.jar</b> 加到 <b>WEB-INF/lib</b> 中並加到 <b>Class path</b>。<br /><br />然後下載 <b>Jersey</b> 所需的 <b>Jar</b> (現時為止最新版本為 1.9):<br /><ol><li><a href="https://maven.java.net/service/local/artifact/maven/redirect?r=releases&g=com.sun.jersey&a=jersey-server&v=1.9&e=jar">jersey-server.jar</a></li><li><a href="https://maven.java.net/service/local/artifact/maven/redirect?r=releases&g=com.sun.jersey&a=jersey-core&v=1.9&e=jar">jersey-core.jar</a></li><li><a href="http://repo1.maven.org/maven2/asm/asm/3.1/asm-3.1.jar">asm.jar</a></li><li><a href="http://download.java.net/maven/2/com/sun/jersey/contribs/jersey-guice/1.9-SNAPSHOT/jersey-guice-1.9-SNAPSHOT.jar">jersey-guice-1.9-SNAPSHOT.jar</a></li></ol><br />將以上的檔案一樣是放到 WEB-INF/lib 並加到 <b>Class path</b>。<br /><br />首先建立一個 <b>class</b>，每一次連接 <b>http://www.xyzdomainname.com</b> 都會顯示 <b>I am Index page</b>:<br /><pre class="brush: java">package com.ctlok.pro.controller;<br /><br />import javax.ws.rs.GET;<br />import javax.ws.rs.Path;<br />import javax.ws.rs.Produces;<br />import javax.ws.rs.core.MediaType;<br /><br />@Path(&quot;/&quot;)<br />public class CommonController {<br /><br />    @GET<br />    @Produces(MediaType.TEXT_PLAIN)<br />    public String index(){<br />        return &quot;I am Index page&quot;;<br />    }<br />    <br />}<br /></pre><br /><b>@Path</b> 是設定這個 <b>class</b> 會處理的 <b>URL</b>，可以放在 <b>Class</b> 或 <b>Method</b>。而 <b>Jersey</b> 會搜尋出在 <b>Class</b> 上有 <b>@Path</b> 的類別然後處理。<br /><b>@GET</b> 是設定這個 <b>Method</b> 處理那一種請求，一共有 5 種方式: <b>GET, POST, HEAD, PUT, DELETE</b>。<br /><b>@Produces</b> 則是回傳資料的類型，可以是 Text, XML, JSON, HTML 等等。<br /><br />然後再去建立一個 <b>Guice</b> 的 <b>Module class</b> 並設定 <b>Jersey</b>:<br /><pre class="brush:java">package com.ctlok.pro;<br /><br />import java.util.HashMap;<br />import java.util.Map;<br /><br />import com.ctlok.pro.controller.CommonController;<br />import com.google.inject.servlet.RequestScoped;<br />import com.google.inject.servlet.ServletModule;<br />import com.sun.jersey.guice.spi.container.servlet.GuiceContainer;<br /><br />public class WebModule extends ServletModule {<br /><br />    @Override<br />    protected void configureServlets(){<br />        bind(CommonController.class).in(RequestScoped.class);<br />        <br />        Map&lt;String, String&gt; parameters = new HashMap&lt;String, String&gt;(); <br />        parameters.put(&quot;com.sun.jersey.config.property.packages&quot;, &quot;com.ctlok.pro.controller&quot;);<br />        serve(&quot;/<em>&quot;).with(GuiceContainer.class, parameters);<br />    }<br />    <br />}<br /></pre><br />然後設定 <b>Guice</b> 起動時的注入器:<br /><pre class="brush: java">package com.ctlok.pro;<br /><br />import com.google.inject.Guice;<br />import com.google.inject.Injector;<br />import com.google.inject.servlet.GuiceServletContextListener;<br /><br />public class AppConfig extends GuiceServletContextListener{<br /><br />    @Override<br />    protected Injector getInjector() {<br />        return Guice.createInjector(new WebModule());<br />    }<br /><br />}<br /></pre><br />在 web.xml 設定好 <b>Guice Filter</b>和 <b>Listener</b>:<br /><pre class="brush: xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br />&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;<br />xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;<br />xmlns:web=&quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;<br />xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee<br />http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot; version=&quot;2.5&quot;&gt;<br /> &lt;listener&gt;<br />  &lt;listener-class&gt;com.ctlok.pro.AppConfig&lt;/listener-class&gt;<br /> &lt;/listener&gt;<br /> &lt;filter&gt;<br />  &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;<br />  &lt;filter-class&gt;com.google.inject.servlet.GuiceFilter&lt;/filter-class&gt;<br /> &lt;/filter&gt;<br /> &lt;filter-mapping&gt;<br />  &lt;filter-name&gt;guiceFilter&lt;/filter-name&gt;<br />  &lt;url-pattern&gt;/</em>&lt;/url-pattern&gt;<br /> &lt;/filter-mapping&gt;<br />&lt;/web-app&gt;<br /></pre><br />打開 http://localhost:8888 後即可看到 "I am Index page".<br /><br />如要增加 URL，可以在 CommonController 加入:<br /><pre class="brush: java">@GET<br />@Path(&quot;user/{userId}/{userName}&quot;)<br />@Produces(MediaType.TEXT_PLAIN)<br />public String getUser(@PathParam(&quot;userId&quot;) String userId, @PathParam(&quot;userName&quot;) String userName){<br />    return &quot;User ID: &quot; + userId + &quot;, user name: &quot; + userName;<br />}<br /></pre><br />你可能有點疑問，<b>@Path</b> 在 Class 已經設家了，現在又有一個 <b>@Path</b> 在 <b>method</b> 上，那 Jersey 會怎麼決定。<br />其實 <b>Jersey</b> 會將 <b>class</b> 的 <b>@Path value</b> 加上 method 的 <b>@Path value</b>，即是 "/" + "user/{userId}/{userName}"。<br /><br />打開 http://localhost:8888/user/123/lawrence 顯示:User ID: 123, user name: lawrence<br /><br />其實 <b>Jersey</b> 的 <b>Method</b> 不一定返回 <b>String</b> 可以是一個 <b>Object</b> 或 <b>Jersey</b> 定義 的 <b>Response</b>。以下例字示範如何顯示一個 <b>JSP</b> 頁面，並由 <b>Controller</b> 將 <b>Model</b> 傳給 <b>View (JSP)</b>:<br /><br />先在 WEB-INF 新增一個 <b>views</b> 資料夾並新增一個 <b>example.jsp</b>，<b>JSP</b> 內容如下:<br /><pre class="brush: xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br />&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=utf-8&quot; pageEncoding=&quot;utf-8&quot;%&gt;<br />&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;<br />&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br /> &lt;head&gt;<br />  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />  &lt;title&gt;Guice + Jersey + JSP&lt;/title&gt;<br /> &lt;/head&gt;<br /> &lt;body&gt;<br />  &lt;c:out value=&quot;${it.msg}&quot; /&gt;<br /> &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />在 <b>Controller</b> 內也增加一個 <b>Method</b>:<br /><pre class="brush: java">@GET<br />@Path(&quot;jsp&quot;)<br />@Produces(MediaType.TEXT_HTML)<br />public Response getJsp(){<br />    Map&lt;String, Object&gt; model = new HashMap&lt;String, Object&gt;();<br />    model.put(&quot;msg&quot;, &quot;Hello World!&quot;);<br />    return Response.ok(new Viewable(&quot;/WEB-INF/views/example.jsp&quot;, model)).build();<br />}<br /></pre><br />打開 http://localhost:8888/jsp 顯示: Hello World!<br /><br />完整的 CommonController:<br /><pre class="brush: java">package com.ctlok.pro.controller;<br /><br />import java.util.HashMap;<br />import java.util.Map;<br /><br />import javax.ws.rs.GET;<br />import javax.ws.rs.Path;<br />import javax.ws.rs.PathParam;<br />import javax.ws.rs.Produces;<br />import javax.ws.rs.core.MediaType;<br />import javax.ws.rs.core.Response;<br /><br />import com.sun.jersey.api.view.Viewable;<br /><br />@Path(&quot;/&quot;)<br />public class CommonController {<br /><br />    @GET<br />    @Produces(MediaType.TEXT_PLAIN)<br />    public String index() {<br />        return &quot;I am Index page&quot;;<br />    }<br /><br />    @GET<br />    @Path(&quot;user/{userId}/{userName}&quot;)<br />    @Produces(MediaType.TEXT_PLAIN)<br />    public String getUser(@PathParam(&quot;userId&quot;) String userId,<br />            @PathParam(&quot;userName&quot;) String userName) {<br />        return &quot;User ID: &quot; + userId + &quot;, user name: &quot; + userName;<br />    }<br /><br />    @GET<br />    @Path(&quot;jsp&quot;)<br />    @Produces(MediaType.TEXT_HTML)<br />    public Response getJsp() {<br />        Map&lt;String, Object&gt; model = new HashMap&lt;String, Object&gt;();<br />        model.put(&quot;msg&quot;, &quot;Hello World!&quot;);<br />        return Response.ok(new Viewable(&quot;/WEB-INF/views/example.jsp&quot;, model))<br />                .build();<br />    }<br /><br />}<br /></pre><br />範例: <a href="https://sites.google.com/site/lawrencespace/lawpronotes/download/Guice-Jersey.zip?attredirects=0&d=1">Guice-Jersey.zip</a><br />密碼: <b>pro.ctlok.com</b>  相關書籍: <a imageanchor="1" target="_blank"  href="http://www.amazon.com/Dependency-Injection-Dhanji-R-Prasanna/dp/193398855X?ie=UTF8&tag=program06-20&link_code=bil&camp=213689&creative=392969"><img alt="Dependency Injection" src="http://ws.amazon.com/widgets/q?MarketPlace=US&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL160_&ASIN=193398855X&tag=program06-20" /></a><img src="http://www.assoc-amazon.com/e/ir?t=program06-20&l=bil&camp=213689&creative=392969&o=1&a=193398855X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important; padding: 0px !important" /><a imageanchor="1" target="_blank"  href="http://www.amazon.com/Google-Guice-Lightweight-Dependency-ebook/dp/B001BYBU80?ie=UTF8&tag=program06-20&link_code=bil&camp=213689&creative=392969"><img alt="Google Guice: Agile Lightweight Dependency Injection Framework" src="http://ws.amazon.com/widgets/q?MarketPlace=US&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL160_&ASIN=B001BYBU80&tag=program06-20" /></a><img src="http://www.assoc-amazon.com/e/ir?t=program06-20&l=bil&camp=213689&creative=392969&o=1&a=B001BYBU80" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important; padding: 0px !important" /><a imageanchor="1" target="_blank"  href="http://www.amazon.com/RESTful-Java-Jax-RS-Animal-Guide/dp/0596158041?ie=UTF8&tag=program06-20&link_code=bil&camp=213689&creative=392969"><img alt="RESTful Java with Jax-RS (Animal Guide)" src="http://ws.amazon.com/widgets/q?MarketPlace=US&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL160_&ASIN=0596158041&tag=program06-20" /></a><img src="http://www.assoc-amazon.com/e/ir?t=program06-20&l=bil&camp=213689&creative=392969&o=1&a=0596158041" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important; padding: 0px !important" /><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-4420115334139656989?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 Spring Security 3 來保護頁面]]></title>
    <link href="http://pro.ctlok.com/2010/02/spring-security-3.html"/>
    <updated>2010-02-23T18:05:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/02/spring-security-3</id>
    <content type="html"><![CDATA[<p>Spring Security 官方文檔內只有很簡單的教學，教學內將所有 username 和 password 放到 xml 文件內，在真實的環境很少會這樣做，大多數也會經由資料庫去存取用戶資料，在這裡我做一個簡單的範例，雖然這範例沒有使用到資料庫，而只是簡單的制作一個用戶認証的 class，但憑這個 class 你可以經由資料庫或其他方式去存取用戶資料。<br /><br />首先我們要制作 3 個 JSP 檔案<br /><br /><ol><li>index.jsp (主頁面)</li><li>login.jsp (login 表格頁面)</li><li>secure/protected.jsp (受保護的 JSP 頁面)</li></ol><br />index.jsp<br /><pre class="brush: html">&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot; %&gt;<br /> &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;<br />&lt;html&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;<br />        &lt;title&gt;Index Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;a href=&quot;secure/protected.jsp&quot;&gt;Click here to view secure page&lt;/a&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />login.jsp<br /><pre class="brush: html">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br />pageEncoding=&quot;UTF-8&quot; %&gt;<br />&lt;%@taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;<br /> &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;<br />        &lt;title&gt;Login Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;c:if test=&quot;${param.error != null}&quot;&gt;<br />            &lt;h2&gt;Username or password wrong!&lt;/h2&gt;<br />        &lt;/c:if&gt;<br />        &lt;form method=&quot;post&quot; action=&quot;j_spring_security_check&quot;&gt;<br />            &lt;label&gt;<br />                username:<br />            &lt;/label&gt;<br />            &lt;input type=&quot;text&quot; name=&quot;j_username&quot;/&gt;<br />            &lt;br/&gt;<br />            &lt;label&gt;<br />                password:<br />            &lt;/label&gt;<br />            &lt;input type=&quot;password&quot; name=&quot;j_password&quot;/&gt;<br />            &lt;br/&gt;<br />            &lt;input type=&quot;checkbox&quot; name=&quot;_spring_security_remember_me&quot;/&gt;remember me<br />            &lt;br/&gt;<br />            &lt;input type=&quot;submit&quot;/&gt;<br />        &lt;/form&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />secure/protected.jsp<br /><pre class="brush: html">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br />pageEncoding=&quot;UTF-8&quot; %&gt;<br /> &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;<br />        &lt;title&gt;Protected Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;h1&gt;Hello World! This is secure page!&lt;/h1&gt;<br />        &lt;a href=&quot;../j_spring_security_logout&quot;&gt;Logout&lt;/a&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />現在設定 web.xml<br />在 web.xml 加入 Spring 的 ApplicationContext 檔案位置<br /><pre class="brush: xml">&lt;context-param&gt;<br />    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br />    &lt;param-value&gt;<br />        /WEB-INF/security-config.xml<br />    &lt;/param-value&gt;<br />&lt;/context-param&gt;<br /></pre><br />再加入 Spring ApplicationContext Listerner<br /><pre class="brush: xml">&lt;listener&gt;<br />    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;<br />&lt;/listener&gt;<br /></pre><br />再加入 Spring Security 的 Filter<br /><pre class="brush: xml">&lt;filter&gt;<br />    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;<br />&lt;/filter&gt;<br />&lt;filter-mapping&gt;<br />    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />    &lt;url-pattern&gt;/<em>&lt;/url-pattern&gt;<br />&lt;/filter-mapping&gt;<br /></pre><br />完整 web.xml<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"<br /> xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"<br /> id="WebApp_ID" version="2.5"&gt;<br />    &lt;display-name&gt;SpringSecurity&lt;/display-name&gt;<br />    &lt;welcome-file-list&gt;<br />        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;<br />    &lt;/welcome-file-list&gt;<br />    &lt;context-param&gt;<br />        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br />        &lt;param-value&gt;<br />            /WEB-INF/security-config.xml<br />        &lt;/param-value&gt;<br />    &lt;/context-param&gt;<br />    <br />    &lt;listener&gt;<br />        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;<br />    &lt;/listener&gt;<br />    <br />    &lt;filter&gt;<br />        &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />        &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;<br />    &lt;/filter&gt;<br />    &lt;filter-mapping&gt;<br />        &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;<br />        &lt;url-pattern&gt;/</em>&lt;/url-pattern&gt;<br />    &lt;/filter-mapping&gt;<br />&lt;/web-app&gt;<br /></pre><br />現在制作 Spring Security 的設定檔<br />/WEB-INF/security-config.xml<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;beans:beans xmlns="http://www.springframework.org/schema/security"<br /> xmlns:beans="http://www.springframework.org/schema/beans"<br /> xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<br /> http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"&gt;<br />    &lt;http use-expressions="true" auto-config="true"&gt;<br />        &lt;intercept-url pattern="/secure/protected.jsp" access="hasRole('ROLE_USER')"/&gt;<br />        &lt;intercept-url pattern="/login.jsp" access="isAnonymous()"/&gt;<br />        &lt;intercept-url pattern="/<strong>" access="permitAll"/&gt;<br />        &lt;form-login login-processing-url="/j_spring_security_check"<br />         login-page="/login.jsp" default-target-url="/index.jsp"<br />         authentication-failure-url="/login.jsp?error=1"/&gt;<br />        &lt;logout logout-url="/j_spring_security_logout"/&gt;<br />    &lt;/http&gt;<br />&lt;/beans:beans&gt;<br /></pre><br />下面的描述是:<br /><br /><ol><li>將 /secure/protected.jsp 設為 ROLE_USER 才可以進入。</li><li>未 login 的用戶才可以進入</li><li>其他頁面一律可以進入</li></ol><br /><pre class="brush: xml">&lt;intercept-url pattern="/secure/protected.jsp" access="hasRole('ROLE_USER')"/&gt;<br />&lt;intercept-url pattern="/login.jsp" access="isAnonymous()"/&gt;<br />&lt;intercept-url pattern="/</strong>" access="permitAll"/&gt;<br /></pre><br />現在 Create 一個 User Class 並實作 UserDetails Interface。<br />com.blogspot.lawpronotes.security.User<br /><pre class="brush: java">package com.blogspot.lawpronotes.security;<br /><br />import java.util.ArrayList;<br />import java.util.Collection;<br />import java.util.List;<br /><br />import org.springframework.security.core.GrantedAuthority;<br />import org.springframework.security.core.authority.GrantedAuthorityImpl;<br />import org.springframework.security.core.userdetails.UserDetails;<br /><br />public class User implements UserDetails {<br /><br />    private static final long serialVersionUID = 1L;<br /><br />    private String name;<br />    private String password;<br /><br />    public User(String name, String password) {<br />        this.name = name;<br />        this.password = password;<br />    }<br /><br />    @Override<br />    public Collection&lt;GrantedAuthority&gt; getAuthorities() {<br />        // TODO Auto-generated method stub<br />        List&lt;GrantedAuthority&gt; grantedAuthorities = new ArrayList&lt;GrantedAuthority&gt;();<br />        grantedAuthorities.add(new GrantedAuthorityImpl(&quot;ROLE_USER&quot;));<br />        return grantedAuthorities;<br />    }<br /><br />    @Override<br />    public String getPassword() {<br />        // TODO Auto-generated method stub<br />        return password;<br />    }<br /><br />    @Override<br />    public String getUsername() {<br />        // TODO Auto-generated method stub<br />        return name;<br />    }<br /><br />    @Override<br />    public boolean isAccountNonExpired() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />    @Override<br />    public boolean isAccountNonLocked() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />    @Override<br />    public boolean isCredentialsNonExpired() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />    @Override<br />    public boolean isEnabled() {<br />        // TODO Auto-generated method stub<br />        return true;<br />    }<br /><br />}<br /></pre><br />User 這個 Class 作用是給 Spring Security 儲存 User。<br /><br />現在制作一個 SecurityManager 的 Class 並實作 UserDetailsService Interface。<br />com.blogspot.lawpronotes.security.SecurityManager<br /><pre class="brush: java">package com.blogspot.lawpronotes.security;<br /><br />import java.util.ArrayList;<br /><br />import org.springframework.dao.DataAccessException;<br />import org.springframework.security.core.userdetails.UserDetails;<br />import org.springframework.security.core.userdetails.UserDetailsService;<br />import org.springframework.security.core.userdetails.UsernameNotFoundException;<br /><br />public class SecurityManager implements UserDetailsService {<br /><br />    @Override<br />    public UserDetails loadUserByUsername(String username)<br />            throws UsernameNotFoundException, DataAccessException {<br />        // TODO Auto-generated method stub<br />        ArrayList&lt;User&gt; userList = new ArrayList&lt;User&gt;();<br />        userList.add(new User("Lawrence", "123456"));<br />        userList.add(new User("Tom", "654321"));<br />        userList.add(new User("Terry", "321456"));<br />        for (int i = 0; i &lt; userList.size(); i++) {<br />            User user = (User) userList.get(i);<br />            if (user.getUsername().equals(username))<br />                return user;<br />        }<br />        throw new UsernameNotFoundException("User " + username<br />                + " has no GrantedAuthority");<br />    }<br />}<br /></pre><br />loadUserByUsername 是認証用戶的主要部份，成功配對到用戶名稱便返回一個 UserDetails 的對像，並交由 Spring Security 再去配對密碼是否正確，所以我們是看不到用戶密碼的。<br />這這個 method 內，我只是將用戶放到 List 中再配對起來，各位可以選擇用什麼方法去存取用戶資料。<br /><br />現在回到 Spring Security 的設定檔去加入 SecurityManager 這個自定的 Class。<br />加入以下 xml 到 security-config.xml 內。<br /><pre class="brush: xml">&lt;authentication-manager&gt;<br />        &lt;authentication-provider user-service-ref="securityManager"/&gt;<br />    &lt;/authentication-manager&gt;<br />    &lt;beans:bean id="securityManager" class="com.blogspot.lawpronotes.security.SecurityManager"/&gt;<br /></pre><br />完整 security-config.xml<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;beans:beans xmlns="http://www.springframework.org/schema/security"<br /> xmlns:beans="http://www.springframework.org/schema/beans"<br /> xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br /> xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd<br /> http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"&gt;<br />    &lt;http use-expressions="true" auto-config="true"&gt;<br />  &lt;intercept-url pattern="/secure/protected.jsp" access="hasRole('ROLE_USER')"/&gt;<br />  &lt;intercept-url pattern="/login.jsp" access="isAnonymous()"/&gt;<br />  &lt;intercept-url pattern="/**" access="permitAll"/&gt;<br />        &lt;form-login login-processing-url="/j_spring_security_check"<br />         login-page="/login.jsp" default-target-url="/index.jsp"<br />         authentication-failure-url="/login.jsp?error=1"/&gt;<br />        &lt;logout logout-url="/j_spring_security_logout"/&gt;<br />    &lt;/http&gt;<br />    &lt;authentication-manager&gt;<br />        &lt;authentication-provider user-service-ref="securityManager"/&gt;<br />    &lt;/authentication-manager&gt;<br />    &lt;beans:bean id="securityManager" class="com.blogspot.lawpronotes.security.SecurityManager"/&gt;<br />&lt;/beans:beans&gt;<br /></pre><br />現在可以試試效果，直接進入 /secure/protected.jsp 會彈到 login.jsp。<br />只有經過認証的用戶才可進入。<br /><br />範例下載:&nbsp;<a href="http://sites.google.com/site/lawrencespace/lawpronotes/download/SpringSecurity.war">SpringSecurity.war</a><a href="http://www.blogger.com/"></a><br /><br />相關書籍:&nbsp;<a href="http://www.amazon.com/Spring-Recipes-Problem-Solution-Gary-Mak/dp/1590599799?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Spring Recipes: A Problem-Solution Approach" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1590599799&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1590599799" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Spring-Action-Craig-Walls/dp/1933988134?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Spring in Action" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1933988134&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1933988134" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Professional-Java-Development-Spring-Framework/dp/0764574833?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Professional Java Development with the Spring Framework" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0764574833&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0764574833" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-8751328716629164500?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用 JavaServer Pages Standard Tag Library (JSTL) 切換網頁語言 (i18n)]]></title>
    <link href="http://pro.ctlok.com/2010/02/javaserver-pages-standard-tag-library.html"/>
    <updated>2010-02-09T11:50:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/02/javaserver-pages-standard-tag-library</id>
    <content type="html"><![CDATA[<p>利用 JSTL 的&nbsp;Internationalization Tag Library 可以輕鬆的做出支援多國語言的網頁。<br /><br />先增加一個 Package:&nbsp;com.blogspot.lawpronotes.language。<br />在&nbsp;com.blogspot.lawpronotes.language 內新增 3 個 .properties ，命名為&nbsp;form.properties 、form_en.properties 和&nbsp;form_zh.properties。因為 .properties 檔案必須使用&nbsp;ISO 8859-1 編碼，所以是不能直接輸入中文的，要轉換成 Unicode 才可以。<br /><br />使用 Eclipse 的可以參考這篇去安裝 Properties Editor:&nbsp;<a href="http://lawpronotes.blogspot.com/2010/02/eclipse-plugin-properties-editor.html">http://lawpronotes.blogspot.com/2010/02/eclipse-plugin-properties-editor.html</a><br /><br />使用 Properties Editor 可以直接將以下文字複製。<br /><br />form.properties<br /><pre class="brush: text">userName=用戶名稱<br />password=密碼<br /></pre><br />form_en.properties<br /><pre class="brush: text">userName=User Name<br />password=Password<br /></pre><br />form_zh.properties<br /><pre class="brush: text">userName=用戶名稱<br />password=密碼<br /></pre><br />非使用 Properties Editor 請複製以下內容。<br /><br />form.properties<br /><pre class="brush: text">userName=\u7528\u6236\u540d\u7a31<br />password=\u5bc6\u78bc<br /></pre><br />form_en.properties<br /><pre class="brush: text">userName=User Name<br />password=Password<br /></pre><br />form_zh.properties<br /><pre class="brush: text">userName=\u7528\u6236\u540d\u7a31<br />password=\u5bc6\u78bc<br /></pre><br />現在新增一個 JSP 檔案，將以下內容複製到 JSP 檔案內。<br /><pre class="brush: html">&lt;%@page contentType="text/html" pageEncoding="UTF-8"%&gt;<br />&lt;%@taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%&gt;<br />&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<br />                    "http://www.w3.org/TR/html4/loose.dtd"&gt;<br />&lt;html&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;<br />        &lt;title&gt;GlassFish JSP Page&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;fmt:setLocale value="en" /&gt;<br />        &lt;fmt:setBundle basename="com/blogspot/lawpronotes/language/form" var="formBundle" /&gt;<br />        &lt;form&gt;<br />            &lt;label&gt;&lt;fmt:message key="userName" bundle="${formBundle}" /&gt;: &lt;/label&gt;<br />            &lt;input type="text" /&gt;&lt;br /&gt;<br />            &lt;label&gt;&lt;fmt:message key="password" bundle="${formBundle}" /&gt;: &lt;/label&gt;<br />            &lt;input type="text" /&gt;&lt;br /&gt;<br />        &lt;/form&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />使用瀏覽器去看一看會看見以下畫面。<br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S3DXkPkjgMI/AAAAAAAAAdU/87jlgtlmmOo/s1600-h/jstli8n.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S3DXkPkjgMI/AAAAAAAAAdU/87jlgtlmmOo/s320/jstli8n.png" /></a></div><br />現在將<br /><pre class="brush: html">&lt;fmt:setLocale value="en" /&gt;<br /></pre><br />改成<br /><pre class="brush: html">&lt;fmt:setLocale value="zh" /&gt;<br /></pre><br />使用瀏覽器去看一看會變成以下畫面。<br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S3DYQZo3dmI/AAAAAAAAAdc/-6z62eRqn5Q/s1600-h/jstli8n1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S3DYQZo3dmI/AAAAAAAAAdc/-6z62eRqn5Q/s320/jstli8n1.png" /></a></div><br />現在解釋一下。<br />這句是宣告此 JSP 使用 Internationalization Tag Library。<br /><pre class="brush: html">&lt;%@taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%&gt;<br /></pre><br />這句是將宣告此頁面是那種語言。value 是根據你設定的語言而找出相對應的語言檔，即是 <em>en 和 </em>zh。<br /><pre class="brush: html">&lt;fmt:setLocale value="en" /&gt;<br /></pre><br />這句是找出指定的語言檔，因為利用了 &lt;fmt:setLocale value="en" /&gt; 來設定語言，所以不必將 form 換成 form_en 或 form_zh。其中的 var="formBundle" 是將語言檔放進變數內，這意味著同一個頁面可以引入多個語言檔。如果找不到語言檔就會使用預設語言檔，即是 form.properties。<br /><pre class="brush: html">&lt;fmt:setBundle basename="com/blogspot/lawpronotes/language/form" var="formBundle" /&gt;<br /></pre><br />這句是在 formBundle 這個變數內找出關鍵字再顯示出來。因為已經將語言檔放進變數內。<br /><pre class="brush: html">&lt;fmt:message key="userName" bundle="${formBundle}" /&gt;<br /></pre><br />最後大家當然使用自己的創作力去令切換語言更有彈性。<br /><br />相關書籍: <a href="http://www.amazon.com/JSTL-Action-Shawn-Bayern/dp/1930110529?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="JSTL in Action" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1930110529&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1930110529" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Core-JSTL-Mastering-Standard-Library/dp/0131001531?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Core JSTL: Mastering the JSP Standard Tag Library" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0131001531&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0131001531" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/JSTL-Practical-Guide-Programmers-Guides/dp/0126567557?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="JSTL: Practical Guide for JSP Programmers (The Practical Guides)" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0126567557&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0126567557" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-5921232724691983944?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最簡單的方式實現 MVC (Servlet + JSP)]]></title>
    <link href="http://pro.ctlok.com/2010/02/mvc-servlet-jsp.html"/>
    <updated>2010-02-04T11:25:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/02/mvc-servlet-jsp</id>
    <content type="html"><![CDATA[<p>Model-View-Controller 是現時流行的系統架構，Model 代表模型(資料)，View 代表視圖，Controller 代表控制器，使用 Servlet 和 JSP 實現 MVC 系統架構是非常簡單的，可以在完全不使用仕何 Framework 的情況下實現 MVC。<br /><br />下圖顯示出 Model, View 和 Controller 的關係，以 Controller 為中心，控制整個流程。<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2o2OFYCBLI/AAAAAAAAAdM/MZNbYswlrww/s1600-h/350px-ModelViewControllerDiagram.svg.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2o2OFYCBLI/AAAAAAAAAdM/MZNbYswlrww/s320/350px-ModelViewControllerDiagram.svg.png" /></a></div><br />大部份的開發者也會將 HTML 和 其他程式碼混合到一個檔案內，雖然這樣的做發可能令開發時間減少，但以後要修改或維護時便非常困難，要實現 MVC 時不能令視圖被使用者直接用到，如果能被直接用1到便失去了 MVC 的價值，所以私們要將視圖(JSP) 放到使用者不能進入的位置。<br /><div style="text-align: left;"><br />在&nbsp;WEB-INF 資料夾下新增一個 pages 的資料夾，在&nbsp;WEB-INF/pages&nbsp;資料夾下新增一個 index.jsp 的檔案並貼上以下程式碼。WEB-INF 是使用者不能夠進入的位置，這樣便不姅擔心 JSP 僧被直接看到。<br /><br /><pre class="brush: html">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;<br />pageEncoding=&quot;UTF-8&quot; isELIgnored=&quot;false&quot;%&gt;<br />&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;<br />&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;<br />&lt;html&gt;<br />    &lt;head&gt;<br />        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;<br />            &lt;title&gt;Index&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;c:out value=&quot;${ model['message'] }&quot; /&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />現在新增 Package 為 com.blogspot.lawpronotes.servlet ，在 Package 內新增一個&nbsp;Servlet 命名為 IndexServlet.java 並貼上以下程式碼。<br /><br /><pre class="brush: java">package com.blogspot.lawpronotes.servlet;<br /><br />import java.io.IOException;<br />import java.util.HashMap;<br />import java.util.Map;<br /><br />import javax.servlet.RequestDispatcher;<br />import javax.servlet.ServletException;<br />import javax.servlet.http.HttpServlet;<br />import javax.servlet.http.HttpServletRequest;<br />import javax.servlet.http.HttpServletResponse;<br /><br />public class IndexServlet extends HttpServlet {<br />    private static final long serialVersionUID = 1L;<br /><br />    public IndexServlet() {<br />        super();<br />    }<br /><br />    protected void doGet(HttpServletRequest request,<br />            HttpServletResponse response) throws ServletException, IOException {<br />        Map&lt;String, Object&gt; model = new HashMap&lt;String, Object&gt;();<br />        model.put(&quot;message&quot;, &quot;Hello World&quot;);<br />        request.setAttribute(&quot;model&quot;, model);<br />        // Forward to JSP file to display message<br />        RequestDispatcher dispatcher = request<br />                .getRequestDispatcher(&quot;/WEB-INF/pages/index.jsp&quot;);<br />        dispatcher.forward(request, response);<br />    }<br />}<br /></pre><br />web.xml 設定如下:<br /><pre class="brush: xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;<br />    xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot; xmlns:web=&quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;<br />    xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;<br />    id=&quot;WebApp_ID&quot; version=&quot;2.5&quot;&gt;<br />    &lt;display-name&gt;MVC&lt;/display-name&gt;<br />    &lt;welcome-file-list&gt;<br />        &lt;welcome-file&gt;index&lt;/welcome-file&gt;<br />    &lt;/welcome-file-list&gt;<br />    &lt;servlet&gt;<br />        &lt;description&gt;&lt;/description&gt;<br />        &lt;display-name&gt;IndexServlet&lt;/display-name&gt;<br />        &lt;servlet-name&gt;IndexServlet&lt;/servlet-name&gt;<br />        &lt;servlet-class&gt;com.blogspot.lawpronotes.servlet.IndexServlet&lt;/servlet-class&gt;<br />    &lt;/servlet&gt;<br />    &lt;servlet-mapping&gt;<br />        &lt;servlet-name&gt;IndexServlet&lt;/servlet-name&gt;<br />        &lt;url-pattern&gt;/index&lt;/url-pattern&gt;<br />    &lt;/servlet-mapping&gt;<br />&lt;/web-app&gt;<br /></pre><br /><pre class="brush: java">Map&lt;String, Object&gt; model = new HashMap&lt;String, Object&gt;();<br />model.put("message", "Hello World");<br /></pre><br />這就是最簡單的做法，使了 Map 去將所有資料放進去，再交由視圖去顯示出來，JSP 將會顯示 Hello World。<br /><br /><pre class="brush: java">request.setAttribute("model", model);<br /></pre><br />這句是要將 Model 放到 JSP 可以拿得到的地方。<br /><br /><pre class="brush: java">RequestDispatcher dispatcher = request.getRequestDispatcher("/WEB-INF/pages/index.jsp");<br />dispatcher.forward(request, response);<br /></pre><br />RequestDispatcher 作用是將使用者轉發到 JSP 的位置，但使用者是不會知道的，因為這只是 Server 內部的轉發，和 Redirect 不同。<br /><br />相關書籍: <a href="http://www.amazon.com/Murachs-Java-Servlets-JSP-2nd/dp/1890774448?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Murach's Java Servlets and JSP, 2nd Edition" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1890774448&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1890774448" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Head-First-Servlets-JSP-Certified/dp/0596516681?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Head First Servlets and JSP: Passing the Sun Certified Web Component Developer Exam" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0596516681&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0596516681" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/JavaServer-Pages-3rd-Hans-Bergsten/dp/0596005636?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="JavaServer Pages, 3rd Edition" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0596005636&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0596005636" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><br /><br /></div><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-988610871402524739?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java EE 6 - GlassFish v3 + MySQL 5.1 配合 EJB + JPA + Servlet]]></title>
    <link href="http://pro.ctlok.com/2010/02/java-ee-6-glassfish-v3-mysql-51-ejb-jpa.html"/>
    <updated>2010-02-02T16:23:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/02/java-ee-6-glassfish-v3-mysql-51-ejb-jpa</id>
    <content type="html"><![CDATA[<p>現時的專業系統設計者會主張將系統分為 3 層或 4 層的系統架構<br /><br />3 層的系統架構:<br /><ul><li>客戶層 (Client tier)</li><li>商業邏輯層&nbsp;(Business tier)</li><li>資料層 (Enterprise Information Systems(EIS) tier)</li></ul><div>而 4 層則是在&nbsp;客戶層 (Client tier) 和&nbsp;商業邏輯層&nbsp;(Business tier) 之間加插一個網絡服務層 (Web tier)<br /><br />4 層的系統架構:</div><div><ul><li>客戶層 (Client tier)</li><li>網絡服務層 (Web tier)</li><li>商業邏輯層&nbsp;(Business tier)</li><li>資料層 (Enterprise Information Systems(EIS) tier)</li></ul><div>給大家一張圖片比較好理解<br /><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2aUgRhPYUI/AAAAAAAAAXM/QpLUrGz3Iw4/s1600-h/javaee_ejb_jpa_servlet_1.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2aUgRhPYUI/AAAAAAAAAXM/QpLUrGz3Iw4/s320/javaee_ejb_jpa_servlet_1.png" /></a></div><div><br /></div><div>上圖左邊是 3 層架構</div><div>右邊則是 4 層架構</div><div>Web-Based Client 大多數是指瀏覽器&nbsp;</div><div><br /></div><div>其實在上圖的例子不是只有瀏覽器才會使用到網絡服務層 (Web tier)<br />就好像下圖一樣</div><div><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2aUl9H_QdI/AAAAAAAAAXU/0x7W-jEHnqg/s1600-h/javaee_ejb_jpa_servlet_2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2aUl9H_QdI/AAAAAAAAAXU/0x7W-jEHnqg/s320/javaee_ejb_jpa_servlet_2.png" /></a></div><div><br />因為網絡服務層 (Web tier) 包含 Web service<br />Web service 可以經由各種不同的應用程式去使用<br /><br />現在開始試作 4 層的系統架構<br />開發軟件:&nbsp;<a href="http://www.eclipse.org/downloads/">Eclipse IDE for Java EE Developer</a><br />服務器:&nbsp;<a href="https://glassfish.dev.java.net/downloads/v3-final.html">GlassFish v3</a><br />資料庫:&nbsp;<a href="http://dev.mysql.com/downloads/mysql/">MySQL 5.1</a><br /><br />安裝好以上的工具後便開始進行設定<br /><br /><ul><li>Eclipse 整合 GlassFish v3 可參考:&nbsp;<a href="http://lawpronotes.blogspot.com/2010/01/eclipse-glassfish-3.html">http://lawpronotes.blogspot.com/2010/01/eclipse-glassfish-3.html</a></li><li>GlassFish v3 整合 MySQL 5.1 可參考:&nbsp;<a href="http://lawpronotes.blogspot.com/2010/01/glassfish-3-java-ee-server-mysql.html">http://lawpronotes.blogspot.com/2010/01/glassfish-3-java-ee-server-mysql.html</a></li></ul><br />打開&nbsp;MySQL Command Line Client<br />輸入密碼<br />然後輸入以下的 SQL<br /><br /><pre class="brush: sql">CREATE  TABLE IF NOT EXISTS <code>test</code>.<code>User</code> (<br /><br />  <code>UID</code> INT NOT NULL AUTO_INCREMENT ,<br /><br />  <code>name</code> VARCHAR(45) NOT NULL ,<br /><br />  <code>password</code> VARCHAR(45) NOT NULL ,<br /><br />  PRIMARY KEY (<code>UID</code>) )<br /><br />ENGINE = InnoDB<br /><br />DEFAULT CHARACTER SET = utf8;<br /></pre><br /><div class="separator" style="clear: both; text-align: left;"><br /></div><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2abhf7IoKI/AAAAAAAAAXk/aU0UDT5zaRI/s1600-h/javaee_ejb_jpa_servlet_3.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2abhf7IoKI/AAAAAAAAAXk/aU0UDT5zaRI/s320/javaee_ejb_jpa_servlet_3.png" /></a><br /><br /><strong>在安裝 MySQL 後 test 這個 Database 會自動加入</strong><br /><br />在 Eclipse 按 File -&gt; New -&gt; Enterprise Application Project<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2ac-aCJiwI/AAAAAAAAAXs/b_i0QwNKUp4/s1600-h/javaee_ejb_jpa_servlet_4.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2ac-aCJiwI/AAAAAAAAAXs/b_i0QwNKUp4/s320/javaee_ejb_jpa_servlet_4.png" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;"></div><ul><li>Project name: TestEAR</li><li>Target runtime: GlassFish v3 Java EE 6</li><li>EAR version: 5.0</li><li>Configuration: Default&nbsp;Configuration&nbsp;for GlassFish v3 Java EE 6</li></ul><br /><div class="separator" style="clear: both; text-align: left;">按下 Finish</div><div class="separator" style="clear: both; text-align: left;"><br /></div><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2adS_YLBlI/AAAAAAAAAX0/tVIbEVoWhK8/s1600-h/javaee_ejb_jpa_servlet_5.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2adS_YLBlI/AAAAAAAAAX0/tVIbEVoWhK8/s320/javaee_ejb_jpa_servlet_5.png" /></a><br /><br />打開 File -&gt; New -&gt; JPA Project<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2afPYFQywI/AAAAAAAAAYE/WyKH9NCQJZU/s1600-h/javaee_ejb_jpa_servlet_7.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2afPYFQywI/AAAAAAAAAYE/WyKH9NCQJZU/s320/javaee_ejb_jpa_servlet_7.png" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;"></div><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"></div><ul><li>Project name: TestJPA</li><li>Configuration: Default&nbsp;Configuration&nbsp;for GlassFish v3 Java EE 6</li><li>EAR membership: Add project to an EAR</li><li>EAR project name: TestEAR</li></ul><br /><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">按下 Finish</div><br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2aeCv7-5eI/AAAAAAAAAX8/EvQpUnjCpf0/s1600-h/javaee_ejb_jpa_servlet_6.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2aeCv7-5eI/AAAAAAAAAX8/EvQpUnjCpf0/s320/javaee_ejb_jpa_servlet_6.png" /></a></div><br />打開 File -&gt; New -&gt; EJB Project<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2afst7K3DI/AAAAAAAAAYM/zmsVfUN68I8/s1600-h/javaee_ejb_jpa_servlet_8.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2afst7K3DI/AAAAAAAAAYM/zmsVfUN68I8/s320/javaee_ejb_jpa_servlet_8.png" /></a></div><br /><ul><li>Project name: TestEJB</li><li>EJB Module version: 3.0 (還沒有 3.1 可供選擇)</li><li>Configuration: Default&nbsp;Configuration&nbsp;for GlassFish v3 Java EE 6</li><li>EAR membership: Add project to an EAR</li><li>EAR project name: TestEAR</li></ul>按下 Next<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2af_AMiuII/AAAAAAAAAYU/jAYJgxUo4cA/s1600-h/javaee_ejb_jpa_servlet_9.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2af_AMiuII/AAAAAAAAAYU/jAYJgxUo4cA/s320/javaee_ejb_jpa_servlet_9.png" /></a></div><br />再按 Next<br /><br />不要選取 Create an EJB client JAR module to hold the client interface and class<br />按下 Finish<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2ahJKTgwwI/AAAAAAAAAYc/AGDUbz78XgE/s1600-h/javaee_ejb_jpa_servlet_10.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2ahJKTgwwI/AAAAAAAAAYc/AGDUbz78XgE/s320/javaee_ejb_jpa_servlet_10.png" /></a></div><br />打開 File -&gt; New -&gt; Dynamic Web Project<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2ahuHDv0GI/AAAAAAAAAYk/kmyGvWzMU90/s1600-h/javaee_ejb_jpa_servlet_11.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2ahuHDv0GI/AAAAAAAAAYk/kmyGvWzMU90/s320/javaee_ejb_jpa_servlet_11.png" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;"></div><ul><li>Project name: TestWAR</li><li>Dynamic Web module version: 2.5&nbsp;(還沒有 3.0 可供選擇)</li><li>Configuration: Default&nbsp;Configuration&nbsp;for GlassFish v3 Java EE 6</li><li>EAR membership: Add project to an EAR</li><li>EAR project name: TestEAR</li></ul><div>按下 Finish</div><br /><div class="separator" style="clear: both; text-align: left;"><br /></div><a href="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2ah77u011I/AAAAAAAAAYs/5pq165G5uz8/s1600-h/javaee_ejb_jpa_servlet_12.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2ah77u011I/AAAAAAAAAYs/5pq165G5uz8/s320/javaee_ejb_jpa_servlet_12.png" /></a><br /><br />設換到 JPA 的版面<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2ai9XUJL-I/AAAAAAAAAY0/RB7pKebvAzU/s1600-h/javaee_ejb_jpa_servlet_13.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2ai9XUJL-I/AAAAAAAAAY0/RB7pKebvAzU/s320/javaee_ejb_jpa_servlet_13.png" /></a></div><br />在 Data Source Explorer 的 Database connection 按下滑鼠右鍵<br />按下 New<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2ajx_cJotI/AAAAAAAAAZE/a41QIN-YJyU/s1600-h/javaee_ejb_jpa_servlet_15.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2ajx_cJotI/AAAAAAAAAZE/a41QIN-YJyU/s320/javaee_ejb_jpa_servlet_15.png" /></a></div><br /><br /><ul><li>選擇 MySQL</li><li>Name: Test Connection</li></ul><br />按下 Next<br /><div class="separator" style="clear: both; text-align: left;"><br /></div><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2apUupSJHI/AAAAAAAAAZ8/R6xjHaDecIs/s1600-h/javaee_ejb_jpa_servlet_16.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2apUupSJHI/AAAAAAAAAZ8/R6xjHaDecIs/s320/javaee_ejb_jpa_servlet_16.png" /></a><br /><br />現在是沒有 Driver 可供選擇的<br />按下右邊第二個按鈕<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2akXe5HyII/AAAAAAAAAZM/dHlbR4iPe8o/s1600-h/javaee_ejb_jpa_servlet_17.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2akXe5HyII/AAAAAAAAAZM/dHlbR4iPe8o/s320/javaee_ejb_jpa_servlet_17.png" /></a></div><br />選擇 MySQL 5.1<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2alAT4ZCuI/AAAAAAAAAZU/aqPA_rwLPck/s1600-h/javaee_ejb_jpa_servlet_18.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2alAT4ZCuI/AAAAAAAAAZU/aqPA_rwLPck/s320/javaee_ejb_jpa_servlet_18.png" /></a></div><br />在上方的標籤選擇 Jar List<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2alUAKZzZI/AAAAAAAAAZc/la7eUJFU5a0/s1600-h/javaee_ejb_jpa_servlet_19.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2alUAKZzZI/AAAAAAAAAZc/la7eUJFU5a0/s320/javaee_ejb_jpa_servlet_19.png" /></a></div><br />按下 Edit JAR/Zip... 選擇 MySQL JDBC Driver<br />沒有 Driver 的可在這裡下載:&nbsp;<a href="http://dev.mysql.com/downloads/connector/j/">http://dev.mysql.com/downloads/connector/j/</a><br />按下 OK 回到剛才的頁面<br /><br /><ul><li>Database: test</li><li>URL: jdbc:mysql://localhost:3306/test</li><li>User name: root</li><li>password: (不用教吧)</li></ul><div>確定資料正確後可以按一下 Test Connection 測試一下連接有沒有問題</div><div><br /></div><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2amNw3IK0I/AAAAAAAAAZk/4fkREQalqq0/s1600-h/javaee_ejb_jpa_servlet_20.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2amNw3IK0I/AAAAAAAAAZk/4fkREQalqq0/s320/javaee_ejb_jpa_servlet_20.png" /></a></div><br />正確連接會看見以下畫面<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2anHqNnmNI/AAAAAAAAAZs/7Wmta1xB1GI/s1600-h/javaee_ejb_jpa_servlet_21.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2anHqNnmNI/AAAAAAAAAZs/7Wmta1xB1GI/s320/javaee_ejb_jpa_servlet_21.png" /></a></div><br />按下 Finish 完成<br /><br />在 TestJPA project 新增一個 Entities<br />選取 New -&gt;&nbsp;Entities From Table<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2aoNPIxuzI/AAAAAAAAAZ0/nUvU4iNjevU/s1600-h/javaee_ejb_jpa_servlet_22.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2aoNPIxuzI/AAAAAAAAAZ0/nUvU4iNjevU/s320/javaee_ejb_jpa_servlet_22.png" /></a></div><br /><br /><ul><li>Connection: Test Connection</li><li>Schema: test</li><li>Table: user</li></ul><div>按下 Next</div><div><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2apoE1F2iI/AAAAAAAAAaE/_cpJu24UwoY/s1600-h/javaee_ejb_jpa_servlet_24.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2apoE1F2iI/AAAAAAAAAaE/_cpJu24UwoY/s320/javaee_ejb_jpa_servlet_24.png" /></a></div><div><br /></div><div>再按下 Next</div><div><ul><li><s>Key generator: auto</s></li><li>Collection properties type: java.util.List</li><li>Package:&nbsp;com.blogspot.lawpronotes.jpa</li></ul><div>按下 Finish</div></div><div><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2aqasnkZ2I/AAAAAAAAAaM/RZ75QA31gxw/s1600-h/javaee_ejb_jpa_servlet_25.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2aqasnkZ2I/AAAAAAAAAaM/RZ75QA31gxw/s320/javaee_ejb_jpa_servlet_25.png" /></a></div><div><br /></div><div>在 src 的 資料夾會出現 User.java</div><div><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2arawiJTuI/AAAAAAAAAaU/nZa78cCwdno/s1600-h/javaee_ejb_jpa_servlet_26.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2arawiJTuI/AAAAAAAAAaU/nZa78cCwdno/s320/javaee_ejb_jpa_servlet_26.png" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">原始碼如下</div><pre class="brush: java">package com.blogspot.lawpronotes.jpa;<br /><br />import java.io.Serializable;<br />import javax.persistence.<em>;<br /><br />/**<br /> * The persistent class for the user database table.<br /> * <br /> </em>/<br />@Entity<br />@Table(name = "user")<br />@NamedQueries( { @NamedQuery(name = "User.findAll", query = "SELECT u FROM User u") })<br />public class User implements Serializable {<br />    private static final long serialVersionUID = 1L;<br /><br />    @Id<br />    @Column(name = "UID")<br />    private int uid;<br /><br />    private String name;<br /><br />    private String password;<br /><br />    public User() {<br />    }<br /><br />    public int getUid() {<br />        return this.uid;<br />    }<br /><br />    public void setUid(int uid) {<br />        this.uid = uid;<br />    }<br /><br />    public String getName() {<br />        return this.name;<br />    }<br /><br />    public void setName(String name) {<br />        this.name = name;<br />    }<br /><br />    public String getPassword() {<br />        return this.password;<br />    }<br /><br />    public void setPassword(String password) {<br />        this.password = password;<br />    }<br /><br />}<br /></pre><br />現在設定 EJB<br />到 TestEJB -&gt; Properties<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2eO_EPt59I/AAAAAAAAAac/YMaNZz6y_W4/s1600-h/javaee_ejb_jpa_servlet_27.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2eO_EPt59I/AAAAAAAAAac/YMaNZz6y_W4/s320/javaee_ejb_jpa_servlet_27.png" /></a></div><br />找尋 Java EE Module Dependencies<br />將 TestJPA 打勾起來<br />按下 OK<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2ePP17_UGI/AAAAAAAAAak/9nHxZH6voMQ/s1600-h/javaee_ejb_jpa_servlet_28.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2ePP17_UGI/AAAAAAAAAak/9nHxZH6voMQ/s320/javaee_ejb_jpa_servlet_28.png" /></a></div><br />在 TestEJB 新增一個 Session Bean (EJB 3.x)<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2ePv5remuI/AAAAAAAAAas/51EhjecWwRQ/s1600-h/javaee_ejb_jpa_servlet_29.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2ePv5remuI/AAAAAAAAAas/51EhjecWwRQ/s320/javaee_ejb_jpa_servlet_29.png" /></a></div><ul><li>Java package:&nbsp;com.blogspot.lawpronotes.ejb</li><li>Class name: UserController</li><li>Status type: Stateless</li><li>不要將 Remote 打勾 (在同一個 JVM 環境下不需要用到 Remote)</li><li>將 Local 打勾並輸入:&nbsp;com.blogspot.lawpronotes.ejb.UserControllerLocal</li></ul><div>按下 Next</div><br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2eQZ7sPguI/AAAAAAAAAa0/qJbtwpI7kSc/s1600-h/javaee_ejb_jpa_servlet_30.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/_fDN8R2Wgbcs/S2eQZ7sPguI/AAAAAAAAAa0/qJbtwpI7kSc/s320/javaee_ejb_jpa_servlet_30.png" /></a></div><ul><li>Bean name: UserController</li><li>Mapped name: ejb/UserController</li><li>Transaction type: Container</li></ul><div>按下 Finish</div><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2eRuxhV8qI/AAAAAAAAAa8/0Ag4YSf76yM/s1600-h/javaee_ejb_jpa_servlet_31.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2eRuxhV8qI/AAAAAAAAAa8/0Ag4YSf76yM/s320/javaee_ejb_jpa_servlet_31.png" /></a></div><br />在 TestEJB project 內會多出 2 個 file<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2eSUjsfKYI/AAAAAAAAAbE/eir0cPE1SMQ/s1600-h/javaee_ejb_jpa_servlet_32.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2eSUjsfKYI/AAAAAAAAAbE/eir0cPE1SMQ/s320/javaee_ejb_jpa_servlet_32.png" /></a></div><br />將 UserControllerLocal.java 換成以下程式碼<br /><pre class="brush: java">package com.blogspot.lawpronotes.ejb;<br /><br />import javax.ejb.Local;<br /><br />@Local<br />public interface UserControllerLocal {<br />    public void addUser(String userName, String password) throws Exception;<br /><br />    public java.util.List&lt;com.blogspot.lawpronotes.jpa.User&gt; getAllUser()<br />            throws Exception;<br />}<br /><br /></pre><br />再將 UserController.java 換成以下程式碼<br /><pre class="brush: java">package com.blogspot.lawpronotes.ejb;<br /><br />import java.util.List;<br /><br />import javax.ejb.Stateless;<br />import javax.persistence.EntityManager;<br />import javax.persistence.PersistenceContext;<br />import javax.persistence.Query;<br /><br />import com.blogspot.lawpronotes.jpa.User;<br /><br />/<strong><br /> * Session Bean implementation class UserController<br /> */<br />@Stateless(mappedName = "ejb/UserController")<br />public class UserController implements UserControllerLocal {<br /><br />    @PersistenceContext<br />    private EntityManager entityManager;<br /><br />    /</strong><br />     * Default constructor.<br />     <em>/<br />    public UserController() {<br />        // TODO Auto-generated constructor stub<br />    }<br /><br />    @Override<br />    public void addUser(String userName, String password) throws Exception {<br />        // TODO Auto-generated method stub<br />        User user = new User();<br />        user.setName(userName);<br />        user.setPassword(password);<br />        entityManager.persist(user);<br />        entityManager.flush();<br />    }<br /><br />    @SuppressWarnings("unchecked")<br />    @Override<br />    public List&lt;User&gt; getAllUser() throws Exception {<br />        // TODO Auto-generated method stub<br />        List&lt;User&gt; userList = null;<br />        Query query = entityManager.createNamedQuery("User.findAll");<br />        userList = (List&lt;User&gt;) query.getResultList();<br />        return userList;<br />    }<br />}<br /></pre><br />在 TestEJB -&gt; ejbModule -&gt; META-INF 新增一個 XML 檔案<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fTXE10JiI/AAAAAAAAAbM/erUvQuCmK0M/s1600-h/javaee_ejb_jpa_servlet_33.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fTXE10JiI/AAAAAAAAAbM/erUvQuCmK0M/s320/javaee_ejb_jpa_servlet_33.png" /></a></div><br />File name:&nbsp;persistence.xml<br />按下 Finish<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fTqbRrECI/AAAAAAAAAbU/jSDFVmLE8pk/s1600-h/javaee_ejb_jpa_servlet_34.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fTqbRrECI/AAAAAAAAAbU/jSDFVmLE8pk/s320/javaee_ejb_jpa_servlet_34.png" /></a></div><br />貼上以下內容<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;persistence version="1.0"<br />    xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"<br />    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"&gt;<br />    &lt;persistence-unit name="TestJPA"&gt;<br />        &lt;jta-data-source&gt;jdbc/test&lt;/jta-data-source&gt;<br />        &lt;class&gt;com.blogspot.lawpronotes.jpa.User&lt;/class&gt;<br />    &lt;/persistence-unit&gt;<br />&lt;/persistence&gt;<br /></pre><br />其中的 jta-data-source 一定要跟 GlassFish JDBC Resources 的 JNDI name 要一致<br /><pre class="brush: xml">&lt;jta-data-source&gt;jdbc/test&lt;/jta-data-source&gt;<br /></pre><br /><div class="separator" style="clear: both; text-align: left;">進入 TestWAR -&gt; Properties</div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fXrTWsEqI/AAAAAAAAAbs/J3JoWvWyT3Y/s1600-h/javaee_ejb_jpa_servlet_37.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fXrTWsEqI/AAAAAAAAAbs/J3JoWvWyT3Y/s320/javaee_ejb_jpa_servlet_37.png" /></a></div><br /><br /><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">找尋 Java EE Module Dependencies</div><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">將 TestJPA 和 TestEJB 打勾起來</div><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">按下 OK</div><br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fX9VNH5cI/AAAAAAAAAb0/MvMhMazRHg8/s1600-h/javaee_ejb_jpa_servlet_38.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fX9VNH5cI/AAAAAAAAAb0/MvMhMazRHg8/s320/javaee_ejb_jpa_servlet_38.png" /></a></div><br />在 TestWAR 新增一個 Servlet<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fVe-MooZI/AAAAAAAAAbc/OtzNxlv-yDM/s1600-h/javaee_ejb_jpa_servlet_35.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fVe-MooZI/AAAAAAAAAbc/OtzNxlv-yDM/s320/javaee_ejb_jpa_servlet_35.png" /></a></div><br /><br /><ul><li>Java package:&nbsp;com.blogspot.lawpronotes.servlet</li><li>Class name: IndexServlet</li></ul><div>按下 Finish</div><br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fV3k0Zi4I/AAAAAAAAAbk/rI-SdDGvPFE/s1600-h/javaee_ejb_jpa_servlet_36.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fV3k0Zi4I/AAAAAAAAAbk/rI-SdDGvPFE/s320/javaee_ejb_jpa_servlet_36.png" /></a></div><br />將 IndexServlet.java 換成以下內容<br /><pre class="brush: java">package com.blogspot.lawpronotes.servlet;<br /><br />import java.io.IOException;<br />import java.util.List;<br /><br />import javax.ejb.EJB;<br />import javax.servlet.RequestDispatcher;<br />import javax.servlet.ServletException;<br />import javax.servlet.annotation.WebServlet;<br />import javax.servlet.http.HttpServlet;<br />import javax.servlet.http.HttpServletRequest;<br />import javax.servlet.http.HttpServletResponse;<br /><br />import com.blogspot.lawpronotes.ejb.UserControllerLocal;<br />import com.blogspot.lawpronotes.jpa.User;<br /><br />/**<br /> * Servlet implementation class IndexServlet<br /> </em>/<br />@WebServlet(name = "Index", urlPatterns = { "/index" })<br />public class IndexServlet extends HttpServlet {<br />    private static final long serialVersionUID = 1L;<br /><br />    @EJB<br />    private UserControllerLocal userController;<br /><br />    /<strong><br />     * @see HttpServlet#HttpServlet()<br />     */<br />    public IndexServlet() {<br />        super();<br />        // TODO Auto-generated constructor stub<br />    }<br /><br />    /</strong><br />     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse<br />     *      response)<br />     <em>/<br />    protected void doGet(HttpServletRequest request,<br />            HttpServletResponse response) throws ServletException, IOException {<br />        // TODO Auto-generated method stub<br />        try {<br />            List&lt;User&gt; userList = userController.getAllUser();<br />            request.setAttribute("userList", userList);<br />            RequestDispatcher dispatcher = request<br />                    .getRequestDispatcher("/WEB-INF/pages/index.jsp");<br />            dispatcher.forward(request, response);<br />        } catch (Exception ex) {<br />            ex.printStackTrace();<br />        }<br />    }<br /><br />    /**<br />     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse<br />     *      response)<br />     </em>/<br />    protected void doPost(HttpServletRequest request,<br />            HttpServletResponse response) throws ServletException, IOException {<br />        // TODO Auto-generated method stub<br />        try {<br />            String userName = request.getParameter("userName");<br />            String password = request.getParameter("password");<br />            userController.addUser(userName, password);<br />            List&lt;User&gt; userList = userController.getAllUser();<br />            request.setAttribute("userList", userList);<br />            RequestDispatcher dispatcher = request<br />                    .getRequestDispatcher("/WEB-INF/pages/index.jsp");<br />            dispatcher.forward(request, response);<br />        } catch (Exception ex) {<br />            ex.printStackTrace();<br />        }<br />    }<br />}<br /></pre><br />將 TestWAR -&gt; Web Content 的 index.jsp 移除掉<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fYT1AORjI/AAAAAAAAAb8/u4p5Q2hVBDw/s1600-h/javaee_ejb_jpa_servlet_39.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fYT1AORjI/AAAAAAAAAb8/u4p5Q2hVBDw/s320/javaee_ejb_jpa_servlet_39.png" /></a></div><br />在 TestWAR -&gt;&nbsp;Web Content -&gt; WEB-INF 新增一個資料夾<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fZBoK_V7I/AAAAAAAAAcE/a2_NkozwqEU/s1600-h/javaee_ejb_jpa_servlet_40.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fZBoK_V7I/AAAAAAAAAcE/a2_NkozwqEU/s320/javaee_ejb_jpa_servlet_40.png" /></a></div><br />Folder name: pages<br />按下 Finish<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fZSpaHTaI/AAAAAAAAAcM/I--2ptAi9HI/s1600-h/javaee_ejb_jpa_servlet_41.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fZSpaHTaI/AAAAAAAAAcM/I--2ptAi9HI/s320/javaee_ejb_jpa_servlet_41.png" /></a></div><br />在 pages 資料夾新增一個 JSP<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fZyjh3b-I/AAAAAAAAAcU/9q9_YiHMQxA/s1600-h/javaee_ejb_jpa_servlet_42.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fZyjh3b-I/AAAAAAAAAcU/9q9_YiHMQxA/s320/javaee_ejb_jpa_servlet_42.png" /></a></div><br />File name: index.jsp<br />按下 Finish<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fa8S9aYpI/AAAAAAAAAcc/GFAf5ykdB2w/s1600-h/javaee_ejb_jpa_servlet_43.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fa8S9aYpI/AAAAAAAAAcc/GFAf5ykdB2w/s320/javaee_ejb_jpa_servlet_43.png" /></a></div><br />貼上以下程式碼<br /><pre class="brush: html">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"<br />    pageEncoding="UTF-8" isELIgnored="false" %&gt;<br />&lt;%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %&gt;<br />&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;<br />&lt;html&gt;<br />&lt;head&gt;<br />&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;<br />&lt;title&gt;Sample&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br /> &lt;c:if test="${userList.size() &gt; 0}"&gt;<br />  &lt;table&gt;<br />   &lt;thead&gt;<br />    &lt;tr&gt;<br />     &lt;td&gt;User Name&lt;/td&gt;<br />     &lt;td&gt;Password&lt;/td&gt;<br />    &lt;/tr&gt;<br />   &lt;/thead&gt;<br />   &lt;tbody&gt;<br />    &lt;c:forEach var="user" items="${userList}"&gt;<br />     &lt;tr&gt;<br />      &lt;td&gt;${user.getName()}&lt;/td&gt;<br />      &lt;td&gt;${user.getPassword()}&lt;/td&gt;<br />     &lt;/tr&gt;<br />    &lt;/c:forEach&gt;<br />   &lt;/tbody&gt;<br />  &lt;/table&gt;<br /> &lt;/c:if&gt;<br /> &lt;form method="post"&gt;<br />  &lt;label&gt;User Name:&lt;/label&gt;&lt;input type="text" name="userName"/&gt;&lt;br/&gt;<br />  &lt;label&gt;Password:&lt;/label&gt;&lt;input type="password" name="password"/&gt;&lt;br/&gt;<br />  &lt;input type="submit"/&gt;<br /> &lt;/form&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />最後要修改一下 web.xml<br />到 TestWAR -&gt; Web Content -&gt; WEB-INF -&gt; web.xml<br />貼上以下內容<br /><pre class="brush: xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5"&gt;<br />  &lt;display-name&gt;TestWAR&lt;/display-name&gt;<br />  &lt;welcome-file-list&gt;<br />    &lt;welcome-file&gt;index&lt;/welcome-file&gt;<br />  &lt;/welcome-file-list&gt;<br />&lt;/web-app&gt;<br /></pre><br />現在完成了!<br />立即去測試一下<br />到 TestEAR -&gt; Run As - Run on Server<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fbozjdBHI/AAAAAAAAAck/-qGAmjSuL38/s1600-h/javaee_ejb_jpa_servlet_44.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fbozjdBHI/AAAAAAAAAck/-qGAmjSuL38/s320/javaee_ejb_jpa_servlet_44.png" /></a></div><br />選擇 GlassFish v3 Java EE 6 at localhost<br />按下 Finish<br />Eclipse 便會將整個 Project 打包放到 GlassFish Server 上<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fb5meD4AI/AAAAAAAAAcs/-SOodQ2FNQs/s1600-h/javaee_ejb_jpa_servlet_45.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2fb5meD4AI/AAAAAAAAAcs/-SOodQ2FNQs/s320/javaee_ejb_jpa_servlet_45.png" /></a></div><br />在瀏覽器輸入網址:&nbsp;<a href="http://localhost:8080/TestWAR/">http://localhost:8080/TestWAR/</a><br />將會看見以下畫面<br />其實這是一個加入 User 的表格 (好像太陽春了點....)<br /><br /><div class="separator" style="clear: both; text-align: left;"><a href="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fdzGIsEAI/AAAAAAAAAc0/bzKzJLg51qk/s1600-h/javaee_ejb_jpa_servlet_46.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_fDN8R2Wgbcs/S2fdzGIsEAI/AAAAAAAAAc0/bzKzJLg51qk/s320/javaee_ejb_jpa_servlet_46.png" /></a></div><br /><ul><li>User Name: Lawrence</li><li>Password: 123456</li></ul><div>按下提交</div><div><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2feSX6c8fI/AAAAAAAAAc8/wYyYP4QI_C8/s1600-h/javaee_ejb_jpa_servlet_47.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/_fDN8R2Wgbcs/S2feSX6c8fI/AAAAAAAAAc8/wYyYP4QI_C8/s320/javaee_ejb_jpa_servlet_47.png" /></a></div><div><br /></div><div>結果會顯示如以下畫面</div><div><br /></div><div class="separator" style="clear: both; text-align: left;"><a href="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fee6Agp8I/AAAAAAAAAdE/W6sbseKZSDc/s1600-h/javaee_ejb_jpa_servlet_48.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/_fDN8R2Wgbcs/S2fee6Agp8I/AAAAAAAAAdE/W6sbseKZSDc/s320/javaee_ejb_jpa_servlet_48.png" /></a></div><div><br /></div><div>現在講解一下流程:</div><div><ol><li>按下提交</li><li>瀏覽器將表格內容送回 IndexServlet</li><li>IndexServlet 接收內容後將 userName 和 password 送到 EJB Session bean - UserController 的 addUser function</li><li>UserController&nbsp;利用&nbsp;EntityManager 將 userName 和 password 加入到 user table 內</li><li>IndexServlet&nbsp;將所有 user 找出來</li><li>IndexServlet 將 user list 送到 index.jsp 顯示</li></ol><div>大概就是這樣<br /><br />完整範例:&nbsp;<a href="http://sites.google.com/site/lawrencespace/lawpronotes/download/EJB_JPA_Servlet.zip">EJB_JPA_Servlet.zip</a></div><div><br /></div><div>相關書籍:&nbsp;<a href="http://www.amazon.com/Beginning-Java-trade-Platform-GlassFish/dp/1430219548?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Beginning Java™ EE 6 Platform with GlassFish™ 3: From Novice to Professional" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1430219548&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1430219548" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Pro-JPA-Mastering-Persistence-Technology/dp/1430219564?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Pro JPA 2: Mastering the Java™ Persistence API (Expert's Voice in Java Technology)" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1430219564&amp;tag=program06-20" /></a><a href="http://www.amazon.com/EJB-3-Action-Debu-Panda/dp/1933988347?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="EJB 3 in Action" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1933988347&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1933988347" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1430219564" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /></div></div></div></div><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-4305019519713509058?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
</feed>
