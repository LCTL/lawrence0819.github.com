<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dom4j | Programming Design Notes]]></title>
  <link href="http://pro.ctlok.com/blog/tag/dom4j/atom.xml" rel="self"/>
  <link href="http://pro.ctlok.com/"/>
  <updated>2012-03-25T15:00:29+08:00</updated>
  <id>http://pro.ctlok.com/</id>
  <author>
    <name><![CDATA[Lawrence Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java 配搭 Dom4j 和 NekoHTML 輕鬆讀取 HTML 內容]]></title>
    <link href="http://pro.ctlok.com/2010/07/java-read-html-dom4j-nekohtml.html"/>
    <updated>2010-07-27T11:25:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/07/java-read-html-dom4j-nekohtml</id>
    <content type="html"><![CDATA[<p>近日有需要使用程式去讀取網頁上的 <b>HTML</b> 內裡的資訊，如果只是單純使用 java.net.url 加上 String function 去拿取資料會非常痛苦，所以選擇了以讀取 <b>XML</b> 的方式去操作 <b>HTML</b>。雖然在 <b>Java</b> 裡沒有 <b>jQuery</b> 這樣方便的 <b>CSS Selector</b> 去方便我們讀取 <b>HTML</b> 內容，但使用 <b>Dom4j</b> 加上 <b>XPath</b> 去讀取 <b>HTML</b> 內容也算不錯 ( <b>jQuery </b>也支援 <b>XPath</b> )。<br /><br />不懂得 <b>XPath</b> 請到: <a href="http://www.w3schools.com/xpath/">http://www.w3schools.com/xpath/</a><br /><br />在開始前要先下載相關的 <b>Library</b>。<br /><br /><b>Dom4j</b>: <a href="http://www.dom4j.org/dom4j-1.6.1/">http://www.dom4j.org/dom4j-1.6.1/</a><br /><b>NekoHTML</b>: <a href="http://nekohtml.sourceforge.net/">http://nekohtml.sourceforge.net/</a><br /><br />在 <b>Dom4j</b> 使用 <b>XPath</b> 需要使用 <b>jaxen</b>，可以在 <b>Dom4j</b> 的 <b>lib</b> 目錄內找到。<br /><br />而 <b>NekoHTML</b> 需要的 <b>Xerces</b> 亦可以在 <b>NekoHTML</b> 的 <b>lib</b> 目錄內找到。<br /><br />我做了一個簡單的程式去讀取 <b>Yahoo Finance</b> 的股市資料:<br /><br /><pre class="brush: java; highlight: [21, 25, 28, 29, 30]">package com.ctlok.pro;<br /><br />import java.io.IOException;<br /><br />import org.cyberneko.html.parsers.DOMParser;<br />import org.dom4j.Document;<br />import org.dom4j.Node;<br />import org.dom4j.io.DOMReader;<br />import org.xml.sax.SAXException;<br /><br />public class Main {<br /><br />    /<em><em><br />     * @param args<br />     </em>/<br />    public static void main(String[] args) {<br />        try{<br />            String url = &quot;http://hk.finance.yahoo.com/q?s=0005.HK&quot;;<br />            <br />            DOMParser parser = new DOMParser();<br />            parser.parse(url);<br />            <br />            org.w3c.dom.Document document = parser.getDocument();<br />            DOMReader domReader = new DOMReader();  <br />            Document doc = domReader.read(document);<br />            <br />            //Element name should be upper case<br />            Node name = doc.selectSingleNode(&quot;//DIV[@id=&#39;quote-bar-latest&#39;]/</em>/H2/node()&quot;);<br />            Node buy = doc.selectSingleNode(&quot;//DIV[@id=&#39;quote-bar-trade-info&#39;]/TABLE/TBODY/TR[1]/TD[2]&quot;);<br />            Node sell = doc.selectSingleNode(&quot;//DIV[@id=&#39;quote-bar-trade-info&#39;]/TABLE/TBODY/TR[2]/TD[2]&quot;);<br />            <br />            System.out.println(name.getText());<br />            System.out.println(&quot;Buy: &quot; + buy.getText().substring(2));<br />            System.out.println(&quot;Sell: &quot; + sell.getText().substring(2));<br />        } catch (SAXException e) {<br />            System.out.println(e.toString());<br />        } catch (IOException e) {<br />            System.out.println(e.toString());<br />        }<br />    }<br />}<br /></pre><br />在 <b>21</b> 行的程式碼是向 <b>URL</b> 讀取 <b>HTML</b> 資料。<br /><br />在 <b>25</b> 行的程式碼是將 <b>W3C Document</b> 轉換成 <b>Dom4j Document</b>。<br /><br /><b>28, 29, 30</b> 行則是使用 <b>XPath</b> 去讀取指定元素，有一點要注意的是元素名稱是英文大寫。<br /><br />而結果會是以下這樣:<br /><pre class="brush: text">匯豐控股有限公司<br />Buy: 77.700<br />Sell: 77.750<br /></pre><br />相關書籍: <a imageanchor="1" target="_blank"  href="http://www.amazon.com/Java-XML-Brett-McLaughlin/dp/059610149X?ie=UTF8&tag=program06-20&link_code=bil&camp=213689&creative=392969"><img alt="Java and XML" src="http://ws.amazon.com/widgets/q?MarketPlace=US&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL160_&ASIN=059610149X&tag=program06-20" /></a><img src="http://www.assoc-amazon.com/e/ir?t=program06-20&l=bil&camp=213689&creative=392969&o=1&a=059610149X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important; padding: 0px !important" /><a imageanchor="1" target="_blank"  href="http://www.amazon.com/XSLT-XPath-Programmers-Reference-Programmer/dp/0470192747?ie=UTF8&tag=program06-20&link_code=bil&camp=213689&creative=392969"><img alt="XSLT 2.0 and XPath 2.0 Programmer&#39;s Reference (Programmer to Programmer)" src="http://ws.amazon.com/widgets/q?MarketPlace=US&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL160_&ASIN=0470192747&tag=program06-20" /></a><img src="http://www.assoc-amazon.com/e/ir?t=program06-20&l=bil&camp=213689&creative=392969&o=1&a=0470192747" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important; padding: 0px !important" /><a imageanchor="1" target="_blank"  href="http://www.amazon.com/Xpath-Xpointer-Locating-Content-Documents/dp/0596002912?ie=UTF8&tag=program06-20&link_code=bil&camp=213689&creative=392969"><img alt="Xpath and Xpointer: Locating Content in XML Documents" src="http://ws.amazon.com/widgets/q?MarketPlace=US&ServiceVersion=20070822&ID=AsinImage&WS=1&Format=_SL160_&ASIN=0596002912&tag=program06-20" /></a><img src="http://www.assoc-amazon.com/e/ir?t=program06-20&l=bil&camp=213689&creative=392969&o=1&a=0596002912" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important; padding: 0px !important" /><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-5668021575491630946?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
</feed>
