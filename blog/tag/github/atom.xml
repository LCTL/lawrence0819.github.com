<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | Programming Design Notes]]></title>
  <link href="http://pro.ctlok.com/blog/tag/github/atom.xml" rel="self"/>
  <link href="http://pro.ctlok.com/"/>
  <updated>2012-11-12T11:00:20+08:00</updated>
  <id>http://pro.ctlok.com/</id>
  <author>
    <name><![CDATA[Lawrence Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[助你快速開發網站的 Twitter Bootstrap]]></title>
    <link href="http://pro.ctlok.com/2011/12/speed-up-develop-web-site-twitter.html"/>
    <updated>2011-12-28T23:00:00+08:00</updated>
    <id>http://pro.ctlok.com/2011/12/speed-up-develop-web-site-twitter</id>
    <content type="html"><![CDATA[<p><a href="http://a1.twimg.com/profile_images/1540251533/bootstrap-avatar_reasonably_small.png" imageanchor="1" style=""><img border="0" height="72" width="72" src="http://a1.twimg.com/profile_images/1540251533/bootstrap-avatar_reasonably_small.png" /></a><br /><br /><b>Twitter Bootstrap</b> 有點像以前曾經介紹過的 <a href="http://pro.ctlok.com/2010/07/css-framework-blueprint.html">Blueprint</a> 和 <a href="http://960.gs/">960 Grid System</a> 這類的 <b>CSS Framework</b>。<b>Twitter Bootstrap</b> 一樣是能夠幫助你快速設置好網頁佈局的一個 <b>Framework</b>，那這個 <b>Twitter Bootstrap</b> 和前 2 者有什麼分別呢？<br /><br />介面對一個網站是極奇重要的，就算你背後的程式有多強多勁，但沒有一個好的介面也是會把用戶趕走的。<b>Twitter Bootstrap</b> 不單只幫助你設置網頁佈局，亦提供了一體化的介面及一些常用的網頁元件，這些元件都經過精心設計，就算不懂任何任何圖像軟件也能砌出一個美觀的網站（我一直最對網站設計最感頭痛的就是整體一致化）。<br /><b>CSS</b> 元件方面有：<br /><ol><li>網頁佈局的 <b>Grid</b> (有 <b>Fixed layout</b> 和 <b>Fluid layout</b>）</li><li>常用標題大小設置 <b>Typography</b></li><li>列舉 <b>List</b></li><li>提示貼紙 <b>Inline labels</b></li><li>媒體框架 <b>Media grid</b></li><li><b>Table</b></li><li><b>Input box</b></li><li><b>Select box</b></li><li>按鈕 <b>Button</b></li><li>導航列 <b>Navigation bar</b></li><li>標籤 <b>Taps</b></li><li>顯示層級目錄的元件 <b>Breadcrumbs</b></li><li>頁數工具 <b>Pagination</b></li><li>提示 <b>Alerts &amp; Errors</b></li></ol><br />除了 <b>CSS</b> 外元件外，<b>Twitter Bootstrap</b> 亦包括了一些 <b>Javascript</b> 元件：<br /><ol><li>對話框 <b>Modals</b></li><li><b>Tooltips</b></li><li><b>Popovers</b></li></ol><br />元件方面真的比其他 <b>CSS Framework</b> 多太多了，使用了 <b>Twitter Bootstrap</b> 都可以做出一個不太差的網站。<br /><br />因為有些元件和我現有的 <b>CSS</b> 相衝，還是看示範比較好。<br /><br />有興趣可到 <a href="http://twitter.github.com/bootstrap/">http://twitter.github.com/bootstrap/</a> 玩玩看示範。<br />下載可到 <a href="https://github.com/twitter/bootstrap">https://github.com/twitter/bootstrap</a>。<br />到目前為止最新穩定版本是 <b>1.4</b>。<div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-6552671825896734268?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP CodeIgniter 根據瀏覽器語言來顯示語言]]></title>
    <link href="http://pro.ctlok.com/2011/12/php-codeigniter-i18n-browser-locale.html"/>
    <updated>2011-12-18T16:48:00+08:00</updated>
    <id>http://pro.ctlok.com/2011/12/php-codeigniter-i18n-browser-locale</id>
    <content type="html"><![CDATA[<p><a href="http://smashingweb.ge6.org/wp-content/uploads/2009/08/codeigniter-lg.gif" imageanchor="1" style=""><img border="0" height="200" width="200" src="http://smashingweb.ge6.org/wp-content/uploads/2009/08/codeigniter-lg.gif" /></a><br /><br /><br />近排為客戶製作一個網頁，因為客戶已經買下了虛擬主機空間，不能用 <b>Java</b> 去作 <b>Server side language</b>，只好使用 <b>PHP + CodeIgniter</b>。他要求有轉換語言的功能，但發覺 <b>CodeIgniter</b> 本身的 <b>i18n</b> 功能不太完善，只好自己製作一個。<br /><br />這個 <b>i18n</b> 有點像 <b>JSF</b> 的<b>i18n</b> 功能，是根據用戶的瀏覽器語言來判定顯示那一種語言，並且對 <b>Controller</b> 控制語言的程式碼減少(可以 1 行程式碼也不用寫就能夠自動設換各種語言)。這可以減少重複的程式碼和減低 <b>Controller</b> 的複雜性。<br /><br />我己經將這個 <b>Library</b> 放上 <b>github</b> 了，有興趣可以下載來試試 <a href="https://github.com/lawrence0819/php-ci-internationalization">https://github.com/lawrence0819/php-ci-internationalization</a>。<br /><br />以下就是 <b>I18n.php (Core)</b>，放到 <b>application/libraries/I18n.php</b>。<br /><pre class="brush:php">&lt;?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');<br /><br />/<strong><br /> * I18n class<br /> <em><br /> * @package     CodeIgniter<br /> * @subpackage  Libraries<br /> * @category    Libraries<br /> * @author      Lawrence Cheung<br /> * @version     1.0<br /> * @link        https://github.com/lawrence0819<br /> </em>/<br />class I18n{<br />    <br />    protected $CI;<br />    protected $auto = TRUE;<br />    protected $loaded = FALSE;<br />    protected $locale;<br />    <br />    /</strong><br />     * Constructor - get CI instance<br />     <em><br />     </em>/<br />    public function <strong>construct(){<br />        $this -&gt; CI = get_instance(); <br />    }<br />    <br />    /<strong><br />     * Auto load language for CI HOOK<br />     <em><br />     * @access  public<br />     * @return  void<br />     </em>/<br />    public function auto_load_language(){<br />        if ($this -&gt; auto){<br />            $this -&gt; load_language();<br />        }<br />    }<br />    <br />    /</strong><br />     * Manual load language file<br />     <em><br />     * @access  public<br />     * @return  void<br />     </em>/<br />    public function load_language() {<br />        $lang = $this -&gt; get_current_locale();<br />        $language = $this -&gt; get_language_config();<br />        <br />        if (!$this -&gt; loaded) {<br />            $files = $language['files'];<br />            $locale = $language['locale'];<br /><br />            if (array_key_exists($lang, $locale)) {<br />                $folder = $locale[$lang];<br />            } else {<br />                $shortLang = substr($lang, 0, 2);<br />                if (array_key_exists($shortLang, $locale)) {<br />                    $folder = $locale[$shortLang];<br />                } else {<br />                    $folder = $locale['default'];<br />                }<br />            }<br /><br />            foreach ($files as $file) {<br />                $this -&gt; CI -&gt; lang -&gt; load($file, $folder);<br />            }<br />            <br />            $this -&gt; loaded = TRUE;<br />        }<br />    }<br />    <br />    /<strong><br />     * Prevent CI Hook to auto load language file<br />     <em><br />     * @access  public<br />     * @return  void<br />     </em>/<br />    public function prevent_auto(){<br />        $this -&gt; auto = FALSE;<br />    }<br />    <br />    /</strong><br />     * Set current user locale and save locale to cookies<br />     <em><br />     * @access  public<br />     * @Param   string      the locale string: en-US, en-UK, zh-TW, zh-CN<br />     * @Param   integer     the cookies value expire time, default is 30 day<br />     * @Param   string      cookies key<br />     * @return  void<br />     </em>/<br />    public function set_current_locale($locale, $expire = 259200, $cookie_key = 'locale') {<br />        setcookie($cookie_key, $locale, time() + $expire);<br />        $this -&gt; locale = $locale;<br />    }<br />    <br />    /<strong><br />     * Get current user locale<br />     <em><br />     * @access  public<br />     * @Param   string      cookies key, if you changed the key at set_current_locale, please assign it<br />     * @return  string<br />     </em>/<br />    public function get_current_locale($cookie_key = 'locale') {<br />        if (!$this -&gt; locale){<br />            if (isset($<em>COOKIE[$cookie_key])) {<br />                $lang = $</em>COOKIE[$cookie_key];<br />            } else {<br />                if (isset($<em>SERVER['HTTP_ACCEPT_LANGUAGE'])) {<br />                    $lang = substr($</em>SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 5);<br />                } else {<br />                    $language = $this -&gt; get_language_config();<br />                    $lang = $language['default_locale'];<br />                }<br />            }<br />            $this -&gt; locale = $lang;<br />        }<br />        return $this -&gt; locale;<br />    }<br />    <br />    /</strong><br />     * Get configuration values<br />     <em><br />     * @access  default<br />     * @return  array<br />     </em>/<br />    function get_language_config(){<br />        $this -&gt; CI -&gt; config -&gt; load('i18n');<br />        return $this -&gt; CI -&gt; config -&gt; item('language');<br />    }<br />    <br />}<br /><br />/<em> End of file I18n.php </em>/<br />/<em> Location: ./application/libraries/I18N.php </em>/<br /></pre><br />以下的是所需要的設定檔案 <b>i18n.php (Core)</b>，放到 <b>application/config/i18n.php</b>。<br /><pre class="brush:php">&lt;?php if (!defined('BASEPATH')) exit('No direct script access allowed');<br /><br />/<em><em><br /> * I18n library configuration file<br /> </em><br /> * @package     CodeIgniter<br /> * @subpackage  Libraries<br /> * @category    Libraries<br /> * @author      Lawrence Cheung<br /> * @version     1.0<br /> * @link        https://github.com/lawrence0819<br /> </em>/<br /><br />//Add file in this array, if you want I18n library auto load them<br />$config['language']['files'] = array('messages');<br /><br />//If user locale not found, set this valus as a defaul user locale<br />$config['language']['default_locale'] = 'en';<br /><br />//Default language folder, if locale folder not found<br />$config['language']['locale']['default'] = 'tchinese';<br /><br />//zh-CN locale mapped to schinese folder<br />$config['language']['locale']['zh-CN'] = 'schinese';<br /><br />//zh-TW locale mapped to tchinese folder<br />$config['language']['locale']['zh-TW'] = 'tchinese';<br /><br />//en locale mapped to schinese folder<br />$config['language']['locale']['en'] = 'english';<br /><br />/<em> End of file i18n.php </em>/<br />/<em> Location: ./application/config/i18n.php </em>/<br /></pre><br />英文語言檔 <b>messages_lang.php</b>，放到 <b>application/language/english/messages_lang.php</b><br /><pre class="brush:php">&lt;?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');<br /><br />$lang['site_name'] = 'Example site';<br />$lang['message'] = 'Hello World!';<br /><br />/<em> End of file messages_lang.php </em>/<br />/<em> Location: ./application/language/english/messages_lang.php </em>/<br /></pre><br />正體中文語言檔 <b>messages_lang.php</b>，放到 <b>application/language/tchinese/messages_lang.php</b><br /><pre class="brush:php">&lt;?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');<br /><br />$lang['site_name'] = '範例網站';<br />$lang['message'] = '世界，你好！';<br /><br />/<em> End of file messages_lang.php </em>/<br />/<em> Location: ./application/language/tchinese/messages_lang.php </em>/<br /></pre><br />簡體中文語言檔 <b>messages_lang.php</b>，放到 <b>application/language/schinese/messages_lang.php</b><br /><pre class="brush:php">&lt;?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');<br /><br />$lang['site_name'] = '范例网站';<br />$lang['message'] = '世界，你好！';<br /><br />/<em> End of file messages_lang.php </em>/<br />/<em> Location: ./application/language/schinese/messages_lang.php </em>/<br /></pre><br /><br />設定就完成了，如果你有更多語言或不使用 <b>english</b>，<b>tchinese</b>，<b>schinese</b> 的名稱，請更改 <b>application/config/i18n.php</b>。<br /><br /><br />使用方法如下:<br /><br />手動選擇語言的 <b>Controller</b>:<br /><pre class="brush:php">&lt;?php if (!defined('BASEPATH')) exit('No direct script access allowed');<br /><br />class I18nmanual extends CI_Controller{<br /><br />    public function </strong>construct(){<br />        parent::<strong>construct();<br />        $this -&gt; load -&gt; library('i18n');<br />    }<br />    <br />    public function index(){<br />        $this -&gt; i18n -&gt; load_language();<br />        $this -&gt; load -&gt; view('i18ntest');<br />    }<br />    <br />}<br /><br />/<em> End of file i18nmanual.php </em>/<br />/<em> Location: ./application/controller/i18nmanual.php </em>/<br /></pre><br /><b>View</b>:<br /><pre class="brush:php">&lt;html&gt;<br />    &lt;head&gt;<br />        &lt;title&gt;&lt;?php echo $this-&gt;lang-&gt;line('site_name'); ?&gt;&lt;/title&gt;<br />    &lt;/head&gt;<br />    &lt;body&gt;<br />        &lt;?php echo $this-&gt;lang-&gt;line('message'); ?&gt;<br />    &lt;/body&gt;<br />&lt;/html&gt;<br /></pre><br />將會見到和 <b>Browser</b> 相對應的語言。<br /><br />如果覺得要在 </strong>construct 內加上<br /><pre class="brush:php">$this -&gt; load -&gt; library('i18n');<br /></pre><br />太麻煩，可以在 <b>application/config/autoload.php</b> 自動載入 <b>i18n library</b>:<br /><pre class="brush:php">$autoload['libraries'] = array('i18n');<br /></pre><br />開啟全自動的功能要先在 <b>application/config/config.php</b> 更改以下程式碼:<br /><pre class="brush:php">$config['enable_hooks'] = TRUE;<br /></pre><br />再將 <b>application/config/hooks.php</b> 加入以下程式碼:<br /><pre class="brush:php">$hook['post_controller_constructor'][] = array(<br />                                'class'    =&gt; 'I18n',<br />                                'function' =&gt; 'auto_load_language',<br />                                'filename' =&gt; 'I18n.php',<br />                                'filepath' =&gt; 'libraries'<br />                                );<br /></pre><br /><b>Controller</b>:<br /><pre class="brush:php">&lt;?php if (!defined('BASEPATH')) exit('No direct script access allowed');<br /><br />class I18nauto extends CI_Controller{<br /><br />    public function <strong>construct(){<br />        parent::</strong>construct();<br />        $this -&gt; load -&gt; library('i18n');<br />    }<br />    <br />    public function index(){<br />        $this -&gt; load -&gt; view('i18ntest');<br />    }<br />    <br />}<br /><br />/<em> End of file i18nauto.php </em>/<br />/<em> Location: ./application/controller/i18nauto.php </em>/<br /></pre><br />如果有設定自動載入 <b>i18n library</b>，就連 <b><strong>construct</b> 也不需要。<br /><br />如果開啟了全自動的功能，但有些 <b>Controller</b> 又不想自動選擇語言，可以在 <b></strong>construct</b> 加上:<br /><pre class="brush:php">&lt;?php if (!defined('BASEPATH')) exit('No direct script access allowed');<br /><br />class I18nmanual extends CI_Controller{<br /><br />    public function <strong>construct(){<br />        parent::</strong>construct();<br />        $this -&gt; load -&gt; library('i18n');<br />        //prevent auto load language<br />        $this -&gt; i18n -&gt; prevent_auto();<br />    }<br />    <br />    public function index(){<br />        $this -&gt; i18n -&gt; set_current_locale('zh-TW');<br />        $this -&gt; i18n -&gt; load_language();<br />        $this -&gt; load -&gt; view('i18ntest');<br />    }<br />    <br />}<br /><br />/<em> End of file i18nmanual.php </em>/<br />/<em> Location: ./application/controller/i18nmanual.php </em>/<br /></pre><br />一經切換的語系，就會自動將此更改儲存到 <b>Cookies</b>，下一次就會以 <b>Cookies</b> 的語系來選擇語言檔。<br /><br />說明完畢，有什麼問題可以留言給我。<div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-5619452461244676124?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
</feed>
