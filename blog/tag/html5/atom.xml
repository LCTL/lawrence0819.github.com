<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: HTML5 | Programming Design Notes]]></title>
  <link href="http://pro.ctlok.com/blog/tag/html5/atom.xml" rel="self"/>
  <link href="http://pro.ctlok.com/"/>
  <updated>2012-03-26T22:10:22+08:00</updated>
  <id>http://pro.ctlok.com/</id>
  <author>
    <name><![CDATA[Lawrence Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTML5 - Web Storage]]></title>
    <link href="http://pro.ctlok.com/2010/07/html5-web-storage.html"/>
    <updated>2010-07-08T09:25:00+08:00</updated>
    <id>http://pro.ctlok.com/2010/07/html5-web-storage</id>
    <content type="html"><![CDATA[<p>各位應該都知道現在 <b>HTML5</b> 被 <a href="http://www.google.com/">Google</a> 和 <a href="http://www.apple.com/">Apple</a> 2 家大公司大力推行，並希望取代 <a href="http://www.adobe.com/flashplatform/">Flash</a> 的位置，但 <b>HTML5</b> 有什麼特別?<br /><br />以前要記錄一個用戶的資料，並希望用戶下一次打開瀏覽器時候資料仍然存在，你可以想像成網站登入系統，將用戶資料記到 <b>Cookie</b> 內，你可能會問: 有了 <b>Cookie</b> 為什麼還要 <b>Web Storage</b>?<br /><br /><b>Web Storage</b> 的好處:<br /><ul><li>比 <b>Cookie</b> 儲存量大。因應不同瀏覽器會有所不同，不過一定比 <b>Cookie</b> 大。</li><li>在 <b>Javascript</b> 操作 <b>Web Storage</b> 比操作 <b>Cookie</b> 的 <b>API</b> 簡單。</li><li>比 <b>Cookie</b> 節省頻寬，因為 <b>Web Storage</b> 不會上傳到伺服器上。</li></ul><br /><b>Web Storage</b> 的壞處:<br /><ul><li>只有 2 種 <b>Web Storage</b>，一種是<b>永久儲存</b> 的 <b>localStorage</b>，另一種是<b>會話儲存</b> 的 <b>sessionStorage</b>，<b>會話儲存模式</b>會在關閉瀏覽器時刪除。不像 Cookie 有一個時間性。</li><li>安全性和 <b>Cookie</b> 差不多，因為同樣是儲存在用戶電腦上，有機會被別人拆解出來。</li></ul><br />不同瀏覽器的支援亦有所不同，建議使用 <a href="http://www.google.com/chrome">Chrome</a> 瀏覽器來看這篇文章。使用其他瀏覽器可能看不到某些效果。<br /><br /><b>Web Storage</b> 怎麼儲存東西? 首先你要用一個 <b>Key</b> 去作為資料的唯一識別，拿取資料時靠同一個 <b>Key</b> 去取回之前記錄的資料，就好似 Java 的 HashMap 一樣。<br /><br />先講解一下 <b>localStorage</b>。<br />你可以試試在以下的 Textfield 輸入一些文字，然後關閉瀏覽器後再次打開此頁面，剛才的文字又會出現在 Textfield 內。<br /><br /><label>localStorage: </label><input id="local" type="text" /><br /><script type="text/javascript">(function(){var key = "localValue";var localTextField = document.getElementById("local");var value = window.localStorage.getItem(key);if (value){    localTextField.value = value;}localTextField.addEventListener('keyup', function(){    window.localStorage.setItem(key, localTextField.value);}, false);})();</script><br />程式碼:<br /><pre class="brush: js; highlight: [4, 10]">var key = "localValue";<br />var localTextField = document.getElementById("local");<br /><br />var value = window.localStorage.getItem(key);<br />if (value){<br />    localTextField.value = value;<br />}<br /><br />localTextField.addEventListener('keyup', function(){<br />    window.localStorage.setItem(key, localTextField.value);<br />}, false);<br /></pre><br />其實控制 <b>localStorage</b> 只需一行的程式碼便可以，第 4 行程式碼是將之前儲存的數值拿出來並放到 value object 內，而第 10 行，只需要使用 setItem 並將 <b>Key</b> 和數值一起儲存便可以。實在非常簡單，比控制 <b>Cookie</b> 簡單得多了。<br /><br />以下的是 <b>sessionStorage</b> 的例子:<br />你可以試試在以下的 Textfield 輸入一些文字，然後重新整理此頁面，剛才的文字又會出現在 Textfield 內。但一關閉瀏覽器就不會再出現文字。<br /><br /><label>sessionStorage: </label><input id="session" type="text" /><br /><script type="text/javascript">(function(){var key = "sessionValue";var sessionTextField = document.getElementById("session");var value = window.sessionStorage.getItem(key);if (value) {    sessionTextField.value = value;}sessionTextField.addEventListener('keyup', function(){    window.sessionStorage.setItem(key, sessionTextField.value);}, false);})();</script><br />程式碼:<br /><pre class="brush: js; highlight: [4, 10]">var key = "sessionValue";<br />var sessionTextField = document.getElementById("session");<br /><br />var value = window.sessionStorage.getItem(key);<br />if (value) {<br />    sessionTextField.value = value;<br />}<br /><br />sessionTextField.addEventListener('keyup', function(){<br />    window.sessionStorage.setItem(key, sessionTextField.value);<br />}, false);<br /></pre><br />控制 <b>sessionStorage</b> 和 <b>localStorage</b> 一樣簡單，但我發覺 <b>localStorage</b> 和 <b>sessionStorage</b> 可以將 <b>DOM Object</b> 儲存起來，但拿出來再使用時就會發生錯誤，<b>JSON Object</b>則沒有此問題。<br /><br /><b>localStorage</b> 和 <b>sessionStorage</b> 一樣有以下的 <b>function</b> 和 <b>attribute</b>:<br /><ul><li><b>length</b> - 記錄現在有多少個 <b>object</b> 儲存在 <b>localStorage</b> 或 <b>sessionStorage</b></li><li><b>key(index)</b> - 返回 <b>index</b> 所在位置的 <b>key</b></li><li><b>getItem(key)</b> - 返回該 <b>key</b> 擁有的資料，不一定是 <b>String</b>，可以是一個 <b>Object</b></li><li><b>setItem(key, data)</b> - 將資料放到 <b>localStorage</b> 或 <b>sessionStorage</b> 中</li><li><b>removeItem(key)</b> - 移除該 <b>key</b> 擁有的 <b>object</b></li><li><b>clear()</b> - 清空整個 <b>localStorage</b></li></ul><br />你可以將 <b>localStorage</b> 和 <b>sessionStorage</b> 當成一個 <b>JSON Object</b>。用以下的方法也可以將資料記錄 <b>localStorage</b> 和 <b>sessionStorage</b> 中。<br /><br />簡易存入資料的方法:<br /><pre class="brush: js">localStorage.xyz = 'xyz';<br />sessionStorage.abc = 'abc';<br /><br />localStorage['xyz'] = 'xyz';<br />sessionStorage.['abc'] = 'abc';<br /></pre><br />總結一下 <b>Web Storage</b> 的功能:<br /><br />存入資料:<br /><pre class="brush: js">window.localStorage.setItem('xyz', 'xyz');<br />window.sessionStorage.setItem('xyz', 'xyz');<br /><br />window.localStorage.xyz = 'xyz';<br />window.sessionStorage.abc = 'abc';<br /><br />window.localStorage['xyz'] = 'xyz';<br />window.sessionStorage.['abc'] = 'abc';<br /></pre><br />拿取資料:<br /><pre class="brush: js">var xyz = window.localStorage.getItem('xyz');<br />var abc = window.sessionStorage.getItem('abc');<br /><br />var xyz = window.localStorage.xyz;<br />var abc = window.sessionStorage.abc;<br /><br />var xyz = window.localStorage['xyz'];<br />var abc = window.sessionStorage.abc;<br /></pre><br />移除資料:<br /><pre class="brush: js">window.localStorage.removeItem('xyz');<br />window.sessionStorage.removeItem('abc');<br /><br />delete window.localStorage.xyz;<br />delete window.sessionStorage.abc;<br /><br />delete window.localStorage['xyz'];<br />delete window.sessionStorage['abc'];<br /></pre><br />移除整個 <b>Web Storage</b> 的資料:<br /><pre class="brush: js">window.localStorage.clear();<br />window.sessionStorage.clear();<br /></pre><br />拿取 <b>Web Storage</b> 的資料總數:<br /><pre class="brush: js">var size = window.localStorage.length;<br />var size = window.sessionStorage.length;<br /></pre><br />拿取某一行資料的 <b>Key</b>:<br /><pre class="brush: js">var key = window.localStorage.key(1);<br />var key = window.sessionStorage.key(1);<br /></pre><br />相關書籍: <a href="http://www.amazon.com/HTML5-Up-Running-Mark-Pilgrim/dp/0596806027?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="HTML5: Up and Running" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0596806027&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0596806027" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/HTML5-Designing-Internet-Applications-Visualizing/dp/0240813286?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="HTML5: Designing Rich Internet Applications (Visualizing the Web)" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=0240813286&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=0240813286" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><a href="http://www.amazon.com/Beginning-HTML5-CSS3-Generation-Standards/dp/1430228741?ie=UTF8&amp;tag=program06-20&amp;link_code=bil&amp;camp=213689&amp;creative=392969" imageanchor="1" target="_blank"><img alt="Beginning HTML5 and CSS3: Next Generation Web Standards" src="http://ws.amazon.com/widgets/q?MarketPlace=US&amp;ServiceVersion=20070822&amp;ID=AsinImage&amp;WS=1&amp;Format=_SL160_&amp;ASIN=1430228741&amp;tag=program06-20" /></a><img alt="" border="0" height="1" src="http://www.assoc-amazon.com/e/ir?t=program06-20&amp;l=bil&amp;camp=213689&amp;creative=392969&amp;o=1&amp;a=1430228741" style="border: none !important; margin: 0px !important; padding: 0px !important;" width="1" /><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/5998578522192555089-1969628000671561902?l=lawpronotes.blogspot.com' alt='' /></div></p>
]]></content>
  </entry>
  
</feed>
